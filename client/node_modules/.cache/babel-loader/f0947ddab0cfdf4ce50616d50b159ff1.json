{"ast":null,"code":"var _jsxFileName = \"/home/selma/Bureau/DEV/React-Sample/my-app/client/src/components/chatroom.js\";\nimport React from 'react';\nimport \"../App.css\";\nimport { useState, useEffect } from 'react';\n/* global gapi */\n\nfunction Chat() {\n  /**\n   * The Sign-In client object.\n   */\n  var auth2;\n  /**\n   * Initializes the Sign-In client.\n   */\n\n  var initClient = function () {\n    gapi.load('auth2', function () {\n      /**\n       * Retrieve the singleton for the GoogleAuth library and set up the\n       * client.\n       */\n      auth2 = gapi.auth2.init({\n        client_id: '740831316427-m1qet5irfugkeva79brhb6s6nim8ds55.apps.googleusercontent.com'\n      }); // Attach the click handler to the sign-in button\n\n      auth2.attachClickHandler('signin-button', {}, onSuccess, onFailure);\n    });\n  };\n\n  initClient();\n  /**\n   * Handle successful sign-ins.\n   */\n\n  var onSuccess = function (user) {\n    console.log('Signed in as ' + user.getBasicProfile().getName());\n  };\n  /**\n   * Handle sign-in failures.\n   */\n\n\n  var onFailure = function (error) {\n    console.log(error);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card text-center m-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 22\n    }\n  }, \"Simple POST Request\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 22\n    }\n  }, \"HOLA\", /*#__PURE__*/React.createElement(\"button\", {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: addroom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 33\n    }\n  }, \"   Create Room\")));\n}\n\nexport default Chat; //HOW TO SET A POST REQUEST TO AN EXTERNAL API\n// STORE USER IN DATABASE\n\n/*const [PostId, setPostId] = useState(null);\n\nuseEffect(() => {\n\n       // POST request using fetch inside useEffect React hook\n       const requestOptions = {\n              method: 'POST',\n              headers: { 'Content-Type': 'application/json' },\n              body: JSON.stringify({\n                     id: \"4\",\n                     name: \"t\",\n                     email: \"SS\",\n                     password: \"IDd52\",\n                     date: \"23052041\"\n              })\n       };\n       fetch('http://localhost:5000/test', requestOptions)\n              .then(response => response.json())\n              .then(message => setPostId(message));\n       // empty dependency array means this effect will only run once (like componentDidMount in classes)\n}, []);\n\n  return (\n              <div className=\"card text-center m-3\">\n                     <h5 className=\"card-header\">Simple POST Request</h5>\n                     <div className=\"card-body\">\n                            {JSON.stringify(PostId)}\n                     </div>\n              </div>\n       )\n*/\n\n/*import React, { Component } from 'react';\n\nclass Chat extends Component {\n       state = {\n              data: null\n       };\n\n       componentDidMount() {\n              // Call our fetch function below once the component mounts\n              this.callBackendAPI()\n                     .then(res => this.setState({ data: res.express }))\n                     .catch(err => console.log(err));\n       }SyntaxErrorss_backend');\n              const body = await response.json();\n\n              if (response.status !== 200) {\n                     throw Error(body.message)\n              }\n              return body;\n       };\n\n       render() {\n              return (\n                     <div className=\"App\">\n                            <header className=\"App-header\">\n                                   <h1 className=\"App-title\">Welcome to React</h1>\n                            </header>\n                            <p className=\"App-intro\">{this.state.data}</p>\n                     </div>\n              );\n       }\n}\n\nexport default Chat;\n\n\n\n\n\n\n\n\n\n/* HOW TO FETCH DATA FROM EXTERNAL API EXAMPLE*/\n\n/*import React, { useState, useEffect } from 'react';\nimport { decode } from 'he';\n\n\nfunction Chat() {\n       const [joke, setJoke] = useState('');\n\n       const fetchJoke = async signal => {\n              const url = new URL('https://api.icndb.com/jokes/random');\n              const response = await fetch(url, { signal });\n              const { value } = await response.json();\n\n              setJoke(decode(value.joke));\n       };\n\n       useEffect(() => {\n              if (!joke) {\n                     const controller = new AbortController();\n                     fetchJoke(controller.signal);\n\n                     return () => controller.abort();\n              }\n       }, [joke]);\n\n       return (\n              <div className=\"App\">\n                     <header className=\"App-header\">\n                            <p>{joke || '...'}</p>\n                            <button className=\"App-link\" onClick={() => setJoke('')}>\n                                   Get a new joke\n        </button>\n                     </header>\n\n              </div>\n\n       );\n\n}\n\nexport default Chat;*/","map":{"version":3,"sources":["/home/selma/Bureau/DEV/React-Sample/my-app/client/src/components/chatroom.js"],"names":["React","useState","useEffect","Chat","auth2","initClient","gapi","load","init","client_id","attachClickHandler","onSuccess","onFailure","user","console","log","getBasicProfile","getName","error","addroom"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA;;AAEA,SAASC,IAAT,GAAgB;AACT;;;AAGA,MAAIC,KAAJ;AAEA;;;;AAGA,MAAIC,UAAU,GAAG,YAAY;AACtBC,IAAAA,IAAI,CAACC,IAAL,CAAU,OAAV,EAAmB,YAAY;AACxB;;;;AAIAH,MAAAA,KAAK,GAAGE,IAAI,CAACF,KAAL,CAAWI,IAAX,CAAgB;AACjBC,QAAAA,SAAS,EAAE;AADM,OAAhB,CAAR,CALwB,CASxB;;AACAL,MAAAA,KAAK,CAACM,kBAAN,CAAyB,eAAzB,EAA0C,EAA1C,EAA8CC,SAA9C,EAAyDC,SAAzD;AACN,KAXD;AAYN,GAbD;;AAeAP,EAAAA,UAAU;AAGV;;;;AAGA,MAAIM,SAAS,GAAG,UAAUE,IAAV,EAAgB;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkBF,IAAI,CAACG,eAAL,GAAuBC,OAAvB,EAA9B;AACN,GAFD;AAIA;;;;;AAGA,MAAIL,SAAS,GAAG,UAAUM,KAAV,EAAiB;AAC1BJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACN,GAFD;;AAGA,sBACO;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACO;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADP,eAGO;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAEW;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,KAAK,EAAC,WAAlC;AAA8C,IAAA,OAAO,EAAEC,OAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFX,CAHP,CADP;AAWN;;AAED,eAAehB,IAAf,C,CAoBA;AAEA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA","sourcesContent":["\nimport React from 'react';\nimport \"../App.css\";\nimport { useState, useEffect } from 'react';\n\n/* global gapi */\n\nfunction Chat() {\n       /**\n        * The Sign-In client object.\n        */\n       var auth2;\n\n       /**\n        * Initializes the Sign-In client.\n        */\n       var initClient = function () {\n              gapi.load('auth2', function () {\n                     /**\n                      * Retrieve the singleton for the GoogleAuth library and set up the\n                      * client.\n                      */\n                     auth2 = gapi.auth2.init({\n                            client_id: '740831316427-m1qet5irfugkeva79brhb6s6nim8ds55.apps.googleusercontent.com'\n                     });\n\n                     // Attach the click handler to the sign-in button\n                     auth2.attachClickHandler('signin-button', {}, onSuccess, onFailure);\n              });\n       };\n\n       initClient();\n\n\n       /**\n        * Handle successful sign-ins.\n        */\n       var onSuccess = function (user) {\n              console.log('Signed in as ' + user.getBasicProfile().getName());\n       };\n\n       /**\n        * Handle sign-in failures.\n        */\n       var onFailure = function (error) {\n              console.log(error);\n       };\n       return (\n              <div className=\"card text-center m-3\">\n                     <h5 className=\"card-header\">\n                            Simple POST Request</h5>\n                     <div className=\"card-body\">\n                            HOLA\n                                <button variant=\"contained\" color=\"secondary\" onClick={addroom}>   Create Room\n                                   </button>\n                     </div>\n              </div>\n       )\n}\n\nexport default Chat;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//HOW TO SET A POST REQUEST TO AN EXTERNAL API\n\n// STORE USER IN DATABASE\n\n/*const [PostId, setPostId] = useState(null);\n\nuseEffect(() => {\n\n       // POST request using fetch inside useEffect React hook\n       const requestOptions = {\n              method: 'POST',\n              headers: { 'Content-Type': 'application/json' },\n              body: JSON.stringify({\n                     id: \"4\",\n                     name: \"t\",\n                     email: \"SS\",\n                     password: \"IDd52\",\n                     date: \"23052041\"\n              })\n       };\n       fetch('http://localhost:5000/test', requestOptions)\n              .then(response => response.json())\n              .then(message => setPostId(message));\n       // empty dependency array means this effect will only run once (like componentDidMount in classes)\n}, []);\n\n  return (\n              <div className=\"card text-center m-3\">\n                     <h5 className=\"card-header\">Simple POST Request</h5>\n                     <div className=\"card-body\">\n                            {JSON.stringify(PostId)}\n                     </div>\n              </div>\n       )\n*/\n\n\n\n\n\n\n\n/*import React, { Component } from 'react';\n\nclass Chat extends Component {\n       state = {\n              data: null\n       };\n\n       componentDidMount() {\n              // Call our fetch function below once the component mounts\n              this.callBackendAPI()\n                     .then(res => this.setState({ data: res.express }))\n                     .catch(err => console.log(err));\n       }SyntaxErrorss_backend');\n              const body = await response.json();\n\n              if (response.status !== 200) {\n                     throw Error(body.message)\n              }\n              return body;\n       };\n\n       render() {\n              return (\n                     <div className=\"App\">\n                            <header className=\"App-header\">\n                                   <h1 className=\"App-title\">Welcome to React</h1>\n                            </header>\n                            <p className=\"App-intro\">{this.state.data}</p>\n                     </div>\n              );\n       }\n}\n\nexport default Chat;\n\n\n\n\n\n\n\n\n\n/* HOW TO FETCH DATA FROM EXTERNAL API EXAMPLE*/\n\n/*import React, { useState, useEffect } from 'react';\nimport { decode } from 'he';\n\n\nfunction Chat() {\n       const [joke, setJoke] = useState('');\n\n       const fetchJoke = async signal => {\n              const url = new URL('https://api.icndb.com/jokes/random');\n              const response = await fetch(url, { signal });\n              const { value } = await response.json();\n\n              setJoke(decode(value.joke));\n       };\n\n       useEffect(() => {\n              if (!joke) {\n                     const controller = new AbortController();\n                     fetchJoke(controller.signal);\n\n                     return () => controller.abort();\n              }\n       }, [joke]);\n\n       return (\n              <div className=\"App\">\n                     <header className=\"App-header\">\n                            <p>{joke || '...'}</p>\n                            <button className=\"App-link\" onClick={() => setJoke('')}>\n                                   Get a new joke\n        </button>\n                     </header>\n\n              </div>\n\n       );\n\n}\n\nexport default Chat;*/\n"]},"metadata":{},"sourceType":"module"}