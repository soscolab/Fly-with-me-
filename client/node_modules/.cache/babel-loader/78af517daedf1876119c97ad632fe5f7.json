{"ast":null,"code":"var _jsxFileName = \"/home/selma/Bureau/DEV/React-Sample/my-app/client/src/components/Login.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport GoogleLogin from 'react-google-login';\nimport Button from '@material-ui/core/Button';\nimport { GoogleLogout } from 'react-google-login';\nimport { useGoogleLogin } from 'react-google-login';\n/* global gapi */\n//LogIn using google Autho\n\nfunction Login() {\n  const [Authentificated, setAuthentificated] = useState(false); // GET THE TOKEN FROM GOOGLE API\n\n  const responseGoogle = response => {\n    const [PostId, setPostId] = useState(null);\n    const jwtoken = response.tokenId;\n    alert(jwtoken);\n    console.log(jwtoken);\n    console.log(response.profileObj); // SEND THE TOKEN TO THE BACK END - EXPRESS\n    // POST request using fetch inside useEffect React hook\n\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: jwtoken\n    };\n    fetch('http://localhost:5000/GoogleLogin', requestOptions).then(response => response.json()).then(message => setPostId(message));\n  };\n\n  function failure() {\n    alert(\"sorry couldn't log in \");\n  }\n\n  function signOut() {\n    var auth2 = gapi.auth2.getAuthInstance();\n    auth2.signOut().then(function () {\n      alert(\"sorry! you are out\");\n    });\n  }\n\n  function logoutfailure() {\n    alert(\"sorry we couldn't log out, try again later \");\n  } // SEND TOKEN TO THE BACK-END ( EXPRESS)\n\n  /* TO DO \n    Check Logged In  ComponentDidMount() does\n   most of our heavy lifting. If the user is\n   not logged in, we instantly redirect them\n   to the login page. Otherwise, we make an \n   attempt to get the information that is\n   stored in the token and save it in the \n   state.\n  ------------------------------------------\n  ------------------------------------------\n  ------------------------------------------\n  ------------------------------------------\n  -----------------------------------------\n  */\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Login-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(GoogleLogin, {\n    clientId: \"740831316427-m1qet5irfugkeva79brhb6s6nim8ds55.apps.googleusercontent.com\",\n    buttonText: \"Sign in with google\",\n    onSuccess: responseGoogle,\n    onFailure: failure,\n    cookiePolicy: 'single_host_origin',\n    isSignedIn: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(GoogleLogout, {\n    clientId: \"740831316427-m1qet5irfugkeva79brhb6s6nim8ds55.apps.googleusercontent.com\",\n    buttonText: \"Logout\",\n    responseType: \"code\",\n    onLogoutSuccess: signOut,\n    onFailure: logoutfailure,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }\n  })));\n}\n\nexport default Login;","map":{"version":3,"sources":["/home/selma/Bureau/DEV/React-Sample/my-app/client/src/components/Login.js"],"names":["React","useState","ReactDOM","GoogleLogin","Button","GoogleLogout","useGoogleLogin","Login","Authentificated","setAuthentificated","responseGoogle","response","PostId","setPostId","jwtoken","tokenId","alert","console","log","profileObj","requestOptions","method","headers","body","fetch","then","json","message","failure","signOut","auth2","gapi","getAuthInstance","logoutfailure"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,SAASC,cAAT,QAA+B,oBAA/B;AAGA;AAEA;;AAEA,SAASC,KAAT,GAAiB;AAEX,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCR,QAAQ,CAAC,KAAD,CAAtD,CAFW,CAIX;;AACA,QAAMS,cAAc,GAAGC,QAAQ,IAAI;AAE7B,UAAM,CAACC,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,IAAD,CAApC;AAEA,UAAMa,OAAO,GAAGH,QAAQ,CAACI,OAAzB;AACAC,IAAAA,KAAK,CAACF,OAAD,CAAL;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYP,QAAQ,CAACQ,UAArB,EAP6B,CAS7B;AAEA;;AACA,UAAMC,cAAc,GAAG;AACjBC,MAAAA,MAAM,EAAE,MADS;AAEjBC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFQ;AAGjBC,MAAAA,IAAI,EAAET;AAHW,KAAvB;AAKAU,IAAAA,KAAK,CAAC,mCAAD,EAAsCJ,cAAtC,CAAL,CACOK,IADP,CACYd,QAAQ,IAAIA,QAAQ,CAACe,IAAT,EADxB,EAEOD,IAFP,CAEYE,OAAO,IAAId,SAAS,CAACc,OAAD,CAFhC;AAGL,GApBD;;AA2BA,WAASC,OAAT,GAAmB;AACbZ,IAAAA,KAAK,CAAC,wBAAD,CAAL;AACL;;AAED,WAASa,OAAT,GAAmB;AACb,QAAIC,KAAK,GAAGC,IAAI,CAACD,KAAL,CAAWE,eAAX,EAAZ;AACAF,IAAAA,KAAK,CAACD,OAAN,GAAgBJ,IAAhB,CAAqB,YAAY;AAC3BT,MAAAA,KAAK,CAAC,oBAAD,CAAL;AACL,KAFD;AAGL;;AAED,WAASiB,aAAT,GAAyB;AACnBjB,IAAAA,KAAK,CAAC,6CAAD,CAAL;AACL,GA7CU,CAgDX;;AAEA;;;;;;;;;;;;;;;;AAiBA,sBACM;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACM,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACM,oBAAC,WAAD;AACM,IAAA,QAAQ,EAAC,0EADf;AAEM,IAAA,UAAU,EAAC,qBAFjB;AAGM,IAAA,SAAS,EAAEN,cAHjB;AAIM,IAAA,SAAS,EAAEkB,OAJjB;AAKM,IAAA,YAAY,EAAE,oBALpB;AAMM,IAAA,UAAU,EAAE,IANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADN,CADN,eAaM,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACM,oBAAC,YAAD;AACM,IAAA,QAAQ,EAAC,0EADf;AAEM,IAAA,UAAU,EAAC,QAFjB;AAGM,IAAA,YAAY,EAAC,MAHnB;AAIM,IAAA,eAAe,EAAEC,OAJvB;AAKM,IAAA,SAAS,EAAEI,aALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADN,CAbN,CADN;AA2BL;;AAED,eAAe1B,KAAf","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport GoogleLogin from 'react-google-login';\nimport Button from '@material-ui/core/Button';\nimport { GoogleLogout } from 'react-google-login';\nimport { useGoogleLogin } from 'react-google-login'\n\n\n/* global gapi */\n\n//LogIn using google Autho\n\nfunction Login() {\n\n      const [Authentificated, setAuthentificated] = useState(false);\n\n      // GET THE TOKEN FROM GOOGLE API\n      const responseGoogle = response => {\n\n            const [PostId, setPostId] = useState(null);\n\n            const jwtoken = response.tokenId;\n            alert(jwtoken)\n            console.log(jwtoken)\n            console.log(response.profileObj)\n\n            // SEND THE TOKEN TO THE BACK END - EXPRESS\n\n            // POST request using fetch inside useEffect React hook\n            const requestOptions = {\n                  method: 'POST',\n                  headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n                  body: jwtoken\n            };\n            fetch('http://localhost:5000/GoogleLogin', requestOptions)\n                  .then(response => response.json())\n                  .then(message => setPostId(message));\n      };\n\n\n\n\n\n\n      function failure() {\n            alert(\"sorry couldn't log in \")\n      }\n\n      function signOut() {\n            var auth2 = gapi.auth2.getAuthInstance();\n            auth2.signOut().then(function () {\n                  alert(\"sorry! you are out\")\n            });\n      }\n\n      function logoutfailure() {\n            alert(\"sorry we couldn't log out, try again later \")\n      }\n\n\n      // SEND TOKEN TO THE BACK-END ( EXPRESS)\n\n      /* TO DO \n\n       Check Logged In  ComponentDidMount() does\n       most of our heavy lifting. If the user is\n       not logged in, we instantly redirect them\n       to the login page. Otherwise, we make an \n       attempt to get the information that is\n       stored in the token and save it in the \n       state.\n      ------------------------------------------\n      ------------------------------------------\n      ------------------------------------------\n      ------------------------------------------\n      -----------------------------------------\n      */\n\n\n      return (\n            <div className=\"Login-button\">\n                  <Button >\n                        <GoogleLogin\n                              clientId=\"740831316427-m1qet5irfugkeva79brhb6s6nim8ds55.apps.googleusercontent.com\"\n                              buttonText=\"Sign in with google\"\n                              onSuccess={responseGoogle}\n                              onFailure={failure}\n                              cookiePolicy={'single_host_origin'}\n                              isSignedIn={true}\n                        />\n\n                  </Button>\n\n                  <Button>\n                        <GoogleLogout\n                              clientId=\"740831316427-m1qet5irfugkeva79brhb6s6nim8ds55.apps.googleusercontent.com\"\n                              buttonText=\"Logout\"\n                              responseType=\"code\"\n                              onLogoutSuccess={signOut}\n                              onFailure={logoutfailure}\n                        />\n                  </Button>\n\n            </div>\n\n      )\n}\n\nexport default Login;\n\n"]},"metadata":{},"sourceType":"module"}