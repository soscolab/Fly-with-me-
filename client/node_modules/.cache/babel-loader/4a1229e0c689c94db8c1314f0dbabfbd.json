{"ast":null,"code":"var _jsxFileName = \"/home/selma/Bureau/DEV/React-Sample/my-app/src/Components/chatroom.js\";\nimport React from 'react';\nimport \"../App.css\";\nimport { useForm } from \"react-hook-form\";\n\nfunction Chat({\n  name,\n  message\n}) {\n  const {\n    handleSubmit,\n    register,\n    errors\n  } = useForm();\n\n  const onSubmit = values => console.log(values);\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"email\",\n    ref: register({\n      required: \"Required\",\n      pattern: {\n        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n        message: \"invalid email address\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 15\n    }\n  }), errors.email && errors.email.message, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"username\",\n    ref: register({\n      validate: value => value !== \"admin\" || \"Nice try!\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 15\n    }\n  }), errors.username && errors.username.message, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 15\n    }\n  }, \"Submit\"));\n}\n\nexport default Chat;","map":{"version":3,"sources":["/home/selma/Bureau/DEV/React-Sample/my-app/src/Components/chatroom.js"],"names":["React","useForm","Chat","name","message","handleSubmit","register","errors","onSubmit","values","console","log","required","pattern","value","email","validate","username"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,SAASC,OAAT,QAAwB,iBAAxB;;AAEA,SAASC,IAAT,CAAc;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAd,EAAiC;AAE1B,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,QAAhB;AAA0BC,IAAAA;AAA1B,MAAqCN,OAAO,EAAlD;;AACA,QAAMO,QAAQ,GAAGC,MAAM,IAAIC,OAAO,CAACC,GAAR,CAAYF,MAAZ,CAA3B;;AAEA,sBAAQ;AAAM,IAAA,QAAQ,EAAEJ,YAAY,CAACG,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACD;AACO,IAAA,IAAI,EAAC,OADZ;AAEO,IAAA,GAAG,EAAEF,QAAQ,CAAC;AACPM,MAAAA,QAAQ,EAAE,UADH;AAEPC,MAAAA,OAAO,EAAE;AACFC,QAAAA,KAAK,EAAE,2CADL;AAEFV,QAAAA,OAAO,EAAE;AAFP;AAFF,KAAD,CAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADC,EAWAG,MAAM,CAACQ,KAAP,IAAgBR,MAAM,CAACQ,KAAP,CAAaX,OAX7B,eAaD;AACO,IAAA,IAAI,EAAC,UADZ;AAEO,IAAA,GAAG,EAAEE,QAAQ,CAAC;AACPU,MAAAA,QAAQ,EAAEF,KAAK,IAAIA,KAAK,KAAK,OAAV,IAAqB;AADjC,KAAD,CAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbC,EAmBAP,MAAM,CAACU,QAAP,IAAmBV,MAAM,CAACU,QAAP,CAAgBb,OAnBnC,eAoBD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cApBC,CAAR;AAuBN;;AACD,eAAeF,IAAf","sourcesContent":["import React from 'react';\nimport \"../App.css\"\nimport { useForm } from \"react-hook-form\";\n\nfunction Chat({ name, message }) {\n\n       const { handleSubmit, register, errors } = useForm();\n       const onSubmit = values => console.log(values);\n\n       return (<form onSubmit={handleSubmit(onSubmit)}>\n              <input\n                     name=\"email\"\n                     ref={register({\n                            required: \"Required\",\n                            pattern: {\n                                   value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n                                   message: \"invalid email address\"\n                            }\n                     })}\n              />\n              {errors.email && errors.email.message}\n\n              <input\n                     name=\"username\"\n                     ref={register({\n                            validate: value => value !== \"admin\" || \"Nice try!\"\n                     })}\n              />\n              {errors.username && errors.username.message}\n              <button type=\"submit\">Submit</button>\n       </form>\n       );\n}\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}