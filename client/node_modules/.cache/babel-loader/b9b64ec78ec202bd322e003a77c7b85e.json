{"ast":null,"code":"var _jsxFileName = \"/home/selma/Bureau/DEV/React-Sample/my-app/client/src/components/chatroom.js\";\nimport React, { Component } from 'react';\n\nclass Chat extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: null\n    };\n\n    this.callBackendAPI = async () => {\n      const response = await fetch('/express_backend');\n      const body = await response.json();\n\n      if (response.status !== 200) {\n        throw Error(body.message);\n      }\n\n      return body;\n    };\n  }\n\n  componentDidMount() {\n    // Call our fetch function below once the component mounts\n    this.callBackendAPI().then(res => this.setState({\n      data: res.express\n    })).catch(err => console.log(err));\n  }\n\n  componentDidMount() {\n    // Simple POST request with a JSON body using fetch\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        title: 'React POST Request Example'\n      })\n    };\n    fetch('http://localhost:5000/express_backend', requestOptions).then(response => response.json()).then(data => this.setState({\n      postId: data.id\n    }));\n  } // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"App-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 36\n      }\n    }, \"Welcome to React\")), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"App-intro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 29\n      }\n    }, this.state.data));\n  }\n\n}\n\nexport default Chat;\n/* HOW TO FETCH DATA FROM EXTERNAL API EXAMPLE*/\n\n/*import React, { useState, useEffect } from 'react';\nimport { decode } from 'he';\n\n\nfunction Chat() {\n       const [joke, setJoke] = useState('');\n\n       const fetchJoke = async signal => {\n              const url = new URL('https://api.icndb.com/jokes/random');\n              const response = await fetch(url, { signal });\n              const { value } = await response.json();\n\n              setJoke(decode(value.joke));\n       };\n\n       useEffect(() => {\n              if (!joke) {\n                     const controller = new AbortController();\n                     fetchJoke(controller.signal);\n\n                     return () => controller.abort();\n              }\n       }, [joke]);\n\n       return (\n              <div className=\"App\">\n                     <header className=\"App-header\">\n                            <p>{joke || '...'}</p>\n                            <button className=\"App-link\" onClick={() => setJoke('')}>\n                                   Get a new joke\n        </button>\n                     </header>\n\n              </div>\n\n       );\n\n}\n\nexport default Chat;*/","map":{"version":3,"sources":["/home/selma/Bureau/DEV/React-Sample/my-app/client/src/components/chatroom.js"],"names":["React","Component","Chat","state","data","callBackendAPI","response","fetch","body","json","status","Error","message","componentDidMount","then","res","setState","express","catch","err","console","log","requestOptions","method","headers","JSON","stringify","title","postId","id","render"],"mappings":";AAGA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,IAAN,SAAmBD,SAAnB,CAA6B;AAAA;AAAA;AAAA,SACtBE,KADsB,GACd;AACDC,MAAAA,IAAI,EAAE;AADL,KADc;;AAAA,SAiDtBC,cAjDsB,GAiDL,YAAY;AACtB,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kBAAD,CAA5B;AACA,YAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AAEA,UAAIH,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EAA6B;AACtB,cAAMC,KAAK,CAACH,IAAI,CAACI,OAAN,CAAX;AACN;;AACD,aAAOJ,IAAP;AACN,KAzDqB;AAAA;;AAKtBK,EAAAA,iBAAiB,GAAG;AACb;AACA,SAAKR,cAAL,GACQS,IADR,CACaC,GAAG,IAAI,KAAKC,QAAL,CAAc;AAAEZ,MAAAA,IAAI,EAAEW,GAAG,CAACE;AAAZ,KAAd,CADpB,EAEQC,KAFR,CAEcC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFrB;AAGN;;AAIDN,EAAAA,iBAAiB,GAAG;AACb;AACA,UAAMS,cAAc,GAAG;AAChBC,MAAAA,MAAM,EAAE,MADQ;AAEhBC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFO;AAGhBhB,MAAAA,IAAI,EAAEiB,IAAI,CAACC,SAAL,CAAe;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAf;AAHU,KAAvB;AAKApB,IAAAA,KAAK,CAAC,uCAAD,EAA0Ce,cAA1C,CAAL,CACQR,IADR,CACaR,QAAQ,IAAIA,QAAQ,CAACG,IAAT,EADzB,EAEQK,IAFR,CAEaV,IAAI,IAAI,KAAKY,QAAL,CAAc;AAAEY,MAAAA,MAAM,EAAExB,IAAI,CAACyB;AAAf,KAAd,CAFrB;AAGN,GAxBqB,CAgDtB;;;AAWAC,EAAAA,MAAM,GAAG;AACF,wBACO;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACO;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACO;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADP,CADP,eAIO;AAAG,MAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0B,KAAK3B,KAAL,CAAWC,IAArC,CAJP,CADP;AAQN;;AApEqB;;AAuE7B,eAAeF,IAAf;AAsDA;;AAEA","sourcesContent":["\n\n\nimport React, { Component } from 'react';\n\nclass Chat extends Component {\n       state = {\n              data: null\n       };\n\n       componentDidMount() {\n              // Call our fetch function below once the component mounts\n              this.callBackendAPI()\n                     .then(res => this.setState({ data: res.express }))\n                     .catch(err => console.log(err));\n       }\n\n\n\n       componentDidMount() {\n              // Simple POST request with a JSON body using fetch\n              const requestOptions = {\n                     method: 'POST',\n                     headers: { 'Content-Type': 'application/json' },\n                     body: JSON.stringify({ title: 'React POST Request Example' })\n              };\n              fetch('http://localhost:5000/express_backend', requestOptions)\n                     .then(response => response.json())\n                     .then(data => this.setState({ postId: data.id }));\n       }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n       // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n       callBackendAPI = async () => {\n              const response = await fetch('/express_backend');\n              const body = await response.json();\n\n              if (response.status !== 200) {\n                     throw Error(body.message)\n              }\n              return body;\n       };\n\n       render() {\n              return (\n                     <div className=\"App\">\n                            <header className=\"App-header\">\n                                   <h1 className=\"App-title\">Welcome to React</h1>\n                            </header>\n                            <p className=\"App-intro\">{this.state.data}</p>\n                     </div>\n              );\n       }\n}\n\nexport default Chat;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/* HOW TO FETCH DATA FROM EXTERNAL API EXAMPLE*/\n\n/*import React, { useState, useEffect } from 'react';\nimport { decode } from 'he';\n\n\nfunction Chat() {\n       const [joke, setJoke] = useState('');\n\n       const fetchJoke = async signal => {\n              const url = new URL('https://api.icndb.com/jokes/random');\n              const response = await fetch(url, { signal });\n              const { value } = await response.json();\n\n              setJoke(decode(value.joke));\n       };\n\n       useEffect(() => {\n              if (!joke) {\n                     const controller = new AbortController();\n                     fetchJoke(controller.signal);\n\n                     return () => controller.abort();\n              }\n       }, [joke]);\n\n       return (\n              <div className=\"App\">\n                     <header className=\"App-header\">\n                            <p>{joke || '...'}</p>\n                            <button className=\"App-link\" onClick={() => setJoke('')}>\n                                   Get a new joke\n        </button>\n                     </header>\n\n              </div>\n\n       );\n\n}\n\nexport default Chat;*/\n"]},"metadata":{},"sourceType":"module"}