{"ast":null,"code":"var _jsxFileName = \"/home/selma/Bureau/DEV/React-Sample/my-app/client/src/components/chatroom.js\";\nimport React from 'react';\nimport \"../App.css\";\nimport { useState, useEffect } from 'react';\n\nfunction Chat() {\n  //HOW TO SET A POST REQUEST TO AN EXTERNAL API\n  const [PostId, setPostId] = useState(null);\n  useEffect(() => {\n    // POST request using fetch inside useEffect React hook\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id: \"2\",\n        name: \"r\",\n        email: \"sh\",\n        password: \"IDd5258\",\n        date: \"23052041\"\n      })\n    };\n    fetch('http://localhost:5000/test', requestOptions).then(response => response.json()).then(message => setPostId(message)); // empty dependency array means this effect will only run once (like componentDidMount in classes)\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card text-center m-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 22\n    }\n  }, \"Simple POST Request\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 22\n    }\n  }, JSON.stringify(PostId)));\n}\n\nexport default Chat;\n/*import React, { Component } from 'react';\n\nclass Chat extends Component {\n       state = {\n              data: null\n       };\n\n       componentDidMount() {\n              // Call our fetch function below once the component mounts\n              this.callBackendAPI()\n                     .then(res => this.setState({ data: res.express }))\n                     .catch(err => console.log(err));\n       }SyntaxErrorss_backend');\n              const body = await response.json();\n\n              if (response.status !== 200) {\n                     throw Error(body.message)\n              }\n              return body;\n       };\n\n       render() {\n              return (\n                     <div className=\"App\">\n                            <header className=\"App-header\">\n                                   <h1 className=\"App-title\">Welcome to React</h1>\n                            </header>\n                            <p className=\"App-intro\">{this.state.data}</p>\n                     </div>\n              );\n       }\n}\n\nexport default Chat;\n\n\n\n\n\n\n\n\n\n/* HOW TO FETCH DATA FROM EXTERNAL API EXAMPLE*/\n\n/*import React, { useState, useEffect } from 'react';\nimport { decode } from 'he';\n\n\nfunction Chat() {\n       const [joke, setJoke] = useState('');\n\n       const fetchJoke = async signal => {\n              const url = new URL('https://api.icndb.com/jokes/random');\n              const response = await fetch(url, { signal });\n              const { value } = await response.json();\n\n              setJoke(decode(value.joke));\n       };\n\n       useEffect(() => {\n              if (!joke) {\n                     const controller = new AbortController();\n                     fetchJoke(controller.signal);\n\n                     return () => controller.abort();\n              }\n       }, [joke]);\n\n       return (\n              <div className=\"App\">\n                     <header className=\"App-header\">\n                            <p>{joke || '...'}</p>\n                            <button className=\"App-link\" onClick={() => setJoke('')}>\n                                   Get a new joke\n        </button>\n                     </header>\n\n              </div>\n\n       );\n\n}\n\nexport default Chat;*/","map":{"version":3,"sources":["/home/selma/Bureau/DEV/React-Sample/my-app/client/src/components/chatroom.js"],"names":["React","useState","useEffect","Chat","PostId","setPostId","requestOptions","method","headers","body","JSON","stringify","id","name","email","password","date","fetch","then","response","json","message"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,SAASC,IAAT,GAAgB;AAET;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,IAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AAET;AACA,UAAMI,cAAc,GAAG;AAChBC,MAAAA,MAAM,EAAE,MADQ;AAEhBC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFO;AAGhBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACdC,QAAAA,EAAE,EAAE,GADU;AAEdC,QAAAA,IAAI,EAAE,GAFQ;AAGdC,QAAAA,KAAK,EAAE,IAHO;AAIdC,QAAAA,QAAQ,EAAE,SAJI;AAKdC,QAAAA,IAAI,EAAE;AALQ,OAAf;AAHU,KAAvB;AAWAC,IAAAA,KAAK,CAAC,4BAAD,EAA+BX,cAA/B,CAAL,CACQY,IADR,CACaC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADzB,EAEQF,IAFR,CAEaG,OAAO,IAAIhB,SAAS,CAACgB,OAAD,CAFjC,EAdS,CAiBT;AACN,GAlBQ,EAkBN,EAlBM,CAAT;AAoBA,sBACO;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACO;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADP,eAEO;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQX,IAAI,CAACC,SAAL,CAAeP,MAAf,CADR,CAFP,CADP;AAQN;;AAED,eAAeD,IAAf;AAqCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA","sourcesContent":["\nimport React from 'react';\nimport \"../App.css\";\nimport { useState, useEffect } from 'react';\n\nfunction Chat() {\n\n       //HOW TO SET A POST REQUEST TO AN EXTERNAL API\n       const [PostId, setPostId] = useState(null);\n\n       useEffect(() => {\n\n              // POST request using fetch inside useEffect React hook\n              const requestOptions = {\n                     method: 'POST',\n                     headers: { 'Content-Type': 'application/json' },\n                     body: JSON.stringify({\n                            id: \"2\",\n                            name: \"r\",\n                            email: \"sh\",\n                            password: \"IDd5258\",\n                            date: \"23052041\"\n                     })\n              };\n              fetch('http://localhost:5000/test', requestOptions)\n                     .then(response => response.json())\n                     .then(message => setPostId(message));\n              // empty dependency array means this effect will only run once (like componentDidMount in classes)\n       }, []);\n\n       return (\n              <div className=\"card text-center m-3\">\n                     <h5 className=\"card-header\">Simple POST Request</h5>\n                     <div className=\"card-body\">\n                            {JSON.stringify(PostId)}\n                     </div>\n              </div>\n       )\n}\n\nexport default Chat;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*import React, { Component } from 'react';\n\nclass Chat extends Component {\n       state = {\n              data: null\n       };\n\n       componentDidMount() {\n              // Call our fetch function below once the component mounts\n              this.callBackendAPI()\n                     .then(res => this.setState({ data: res.express }))\n                     .catch(err => console.log(err));\n       }SyntaxErrorss_backend');\n              const body = await response.json();\n\n              if (response.status !== 200) {\n                     throw Error(body.message)\n              }\n              return body;\n       };\n\n       render() {\n              return (\n                     <div className=\"App\">\n                            <header className=\"App-header\">\n                                   <h1 className=\"App-title\">Welcome to React</h1>\n                            </header>\n                            <p className=\"App-intro\">{this.state.data}</p>\n                     </div>\n              );\n       }\n}\n\nexport default Chat;\n\n\n\n\n\n\n\n\n\n/* HOW TO FETCH DATA FROM EXTERNAL API EXAMPLE*/\n\n/*import React, { useState, useEffect } from 'react';\nimport { decode } from 'he';\n\n\nfunction Chat() {\n       const [joke, setJoke] = useState('');\n\n       const fetchJoke = async signal => {\n              const url = new URL('https://api.icndb.com/jokes/random');\n              const response = await fetch(url, { signal });\n              const { value } = await response.json();\n\n              setJoke(decode(value.joke));\n       };\n\n       useEffect(() => {\n              if (!joke) {\n                     const controller = new AbortController();\n                     fetchJoke(controller.signal);\n\n                     return () => controller.abort();\n              }\n       }, [joke]);\n\n       return (\n              <div className=\"App\">\n                     <header className=\"App-header\">\n                            <p>{joke || '...'}</p>\n                            <button className=\"App-link\" onClick={() => setJoke('')}>\n                                   Get a new joke\n        </button>\n                     </header>\n\n              </div>\n\n       );\n\n}\n\nexport default Chat;*/\n"]},"metadata":{},"sourceType":"module"}