{"ast":null,"code":"var _jsxFileName = \"/home/selma/Bureau/DEV/React-Sample/my-app/client/src/components/chatroom.js\";\nimport React from 'react';\nimport Login from './Login.js';\nimport Logo from './Logo.js';\nimport \"../App.css\";\nimport { useState, useEffect } from 'react';\n\nfunction Chat() {\n  //HOW TO SET A POST REQUEST TO AN EXTERNAL API\n  const [PostId, setPostId] = useState([]);\n  const lat = 258;\n  const emp = 524;\n  const data = {\n    lat,\n    emp\n  };\n  useEffect(() => {\n    // POST request using fetch inside useEffect React hook\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        'Access-Control-Allow-Origin': '*'\n      },\n      body: JSON.stringify(data)\n    };\n    fetch('/express_backend', requestOptions); // empty dependency array means this effect will only run once (like componentDidMount in classes)\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card text-center m-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 22\n    }\n  }, \"Simple POST Request\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 22\n    }\n  }, \"Returned Id:\", JSON.stringify(PostId)));\n}\n\nexport default Chat;\n/*import React, { Component } from 'react';\n\nclass Chat extends Component {\n       state = {\n              data: null\n       };\n\n       componentDidMount() {\n              // Call our fetch function below once the component mounts\n              this.callBackendAPI()\n                     .then(res => this.setState({ data: res.express }))\n                     .catch(err => console.log(err));\n       }\n\n\n\n       // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n       callBackendAPI = async () => {\n              const response = await fetch('/express_backend');\n              const body = await response.json();\n\n              if (response.status !== 200) {\n                     throw Error(body.message)\n              }\n              return body;\n       };\n\n       render() {\n              return (\n                     <div className=\"App\">\n                            <header className=\"App-header\">\n                                   <h1 className=\"App-title\">Welcome to React</h1>\n                            </header>\n                            <p className=\"App-intro\">{this.state.data}</p>\n                     </div>\n              );\n       }\n}\n\nexport default Chat;\n\n\n\n\n\n\n\n\n\n/* HOW TO FETCH DATA FROM EXTERNAL API EXAMPLE*/\n\n/*import React, { useState, useEffect } from 'react';\nimport { decode } from 'he';\n\n\nfunction Chat() {\n       const [joke, setJoke] = useState('');\n\n       const fetchJoke = async signal => {\n              const url = new URL('https://api.icndb.com/jokes/random');\n              const response = await fetch(url, { signal });\n              const { value } = await response.json();\n\n              setJoke(decode(value.joke));\n       };\n\n       useEffect(() => {\n              if (!joke) {\n                     const controller = new AbortController();\n                     fetchJoke(controller.signal);\n\n                     return () => controller.abort();\n              }\n       }, [joke]);\n\n       return (\n              <div className=\"App\">\n                     <header className=\"App-header\">\n                            <p>{joke || '...'}</p>\n                            <button className=\"App-link\" onClick={() => setJoke('')}>\n                                   Get a new joke\n        </button>\n                     </header>\n\n              </div>\n\n       );\n\n}\n\nexport default Chat;*/","map":{"version":3,"sources":["/home/selma/Bureau/DEV/React-Sample/my-app/client/src/components/chatroom.js"],"names":["React","Login","Logo","useState","useEffect","Chat","PostId","setPostId","lat","emp","data","requestOptions","method","headers","Accept","body","JSON","stringify","fetch"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAO,YAAP;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAGA,SAASC,IAAT,GAAgB;AAET;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAMK,GAAG,GAAG,GAAZ;AACA,QAAMC,GAAG,GAAG,GAAZ;AAEA,QAAMC,IAAI,GAAG;AAAEF,IAAAA,GAAF;AAAOC,IAAAA;AAAP,GAAb;AAIAL,EAAAA,SAAS,CAAC,MAAM;AACT;AACA,UAAMO,cAAc,GAAG;AAChBC,MAAAA,MAAM,EAAE,MADQ;AAEhBC,MAAAA,OAAO,EAAE;AACFC,QAAAA,MAAM,EAAE,kBADN;AAEF,wBAAgB,kBAFd;AAGF,uCAA+B;AAH7B,OAFO;AAOhBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,IAAf;AAPU,KAAvB;AAWAQ,IAAAA,KAAK,CAAC,kBAAD,EAAqBP,cAArB,CAAL,CAbS,CAgBT;AACN,GAjBQ,EAiBN,EAjBM,CAAT;AAmBA,sBACO;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACO;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADP,eAEO;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACoBK,IAAI,CAACC,SAAL,CAAeX,MAAf,CADpB,CAFP,CADP;AAQN;;AAED,eAAeD,IAAf;AAqCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDA","sourcesContent":["\nimport React from 'react';\nimport Login from './Login.js';\nimport Logo from './Logo.js';\nimport \"../App.css\";\nimport { useState, useEffect } from 'react';\n\n\nfunction Chat() {\n\n       //HOW TO SET A POST REQUEST TO AN EXTERNAL API\n       const [PostId, setPostId] = useState([]);\n       const lat = 258;\n       const emp = 524;\n\n       const data = { lat, emp };\n\n\n\n       useEffect(() => {\n              // POST request using fetch inside useEffect React hook\n              const requestOptions = {\n                     method: 'POST',\n                     headers: {\n                            Accept: \"application/json\",\n                            \"Content-Type\": \"application/json\",\n                            'Access-Control-Allow-Origin': '*'\n                     },\n                     body: JSON.stringify(data)\n\n              };\n\n              fetch('/express_backend', requestOptions)\n\n\n              // empty dependency array means this effect will only run once (like componentDidMount in classes)\n       }, []);\n\n       return (\n              <div className=\"card text-center m-3\">\n                     <h5 className=\"card-header\">Simple POST Request</h5>\n                     <div className=\"card-body\">\n                            Returned Id:{JSON.stringify(PostId)}\n                     </div>\n              </div>\n       )\n}\n\nexport default Chat;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*import React, { Component } from 'react';\n\nclass Chat extends Component {\n       state = {\n              data: null\n       };\n\n       componentDidMount() {\n              // Call our fetch function below once the component mounts\n              this.callBackendAPI()\n                     .then(res => this.setState({ data: res.express }))\n                     .catch(err => console.log(err));\n       }\n\n\n\n       // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n       callBackendAPI = async () => {\n              const response = await fetch('/express_backend');\n              const body = await response.json();\n\n              if (response.status !== 200) {\n                     throw Error(body.message)\n              }\n              return body;\n       };\n\n       render() {\n              return (\n                     <div className=\"App\">\n                            <header className=\"App-header\">\n                                   <h1 className=\"App-title\">Welcome to React</h1>\n                            </header>\n                            <p className=\"App-intro\">{this.state.data}</p>\n                     </div>\n              );\n       }\n}\n\nexport default Chat;\n\n\n\n\n\n\n\n\n\n/* HOW TO FETCH DATA FROM EXTERNAL API EXAMPLE*/\n\n/*import React, { useState, useEffect } from 'react';\nimport { decode } from 'he';\n\n\nfunction Chat() {\n       const [joke, setJoke] = useState('');\n\n       const fetchJoke = async signal => {\n              const url = new URL('https://api.icndb.com/jokes/random');\n              const response = await fetch(url, { signal });\n              const { value } = await response.json();\n\n              setJoke(decode(value.joke));\n       };\n\n       useEffect(() => {\n              if (!joke) {\n                     const controller = new AbortController();\n                     fetchJoke(controller.signal);\n\n                     return () => controller.abort();\n              }\n       }, [joke]);\n\n       return (\n              <div className=\"App\">\n                     <header className=\"App-header\">\n                            <p>{joke || '...'}</p>\n                            <button className=\"App-link\" onClick={() => setJoke('')}>\n                                   Get a new joke\n        </button>\n                     </header>\n\n              </div>\n\n       );\n\n}\n\nexport default Chat;*/\n"]},"metadata":{},"sourceType":"module"}