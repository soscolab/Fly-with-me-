{"ast":null,"code":"var _jsxFileName = \"/home/selma/Bureau/DEV/React-Sample/my-app/client/src/components/Login.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport GoogleLogin from 'react-google-login';\nimport Button from '@material-ui/core/Button';\nimport { GoogleLogout } from 'react-google-login';\nimport { useGoogleLogin } from 'react-google-login';\n/* global gapi */\n//LogIn using google Autho\n\nfunction Login() {\n  const [Authentificated, setAuthentificated] = useState(false); // GET THE TOKEN FROM GOOGLE API\n\n  const [PostId, setPostId] = useState(null);\n\n  const responseGoogle = response => {\n    const jwtoken = response.tokenId; // console.log(response.profileObj)\n\n    const ok = \"ok\"; // SEND THE TOKEN TO THE BACK END - EXPRESS\n    // POST request using fetch inside useEffect React hook\n\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: jwtoken,\n      ok\n    };\n    fetch('http://localhost:5000/GoogleLogin', requestOptions).then(res => res.json()); //    .then(res => console.log({ resultat: res })); // test communication from backend to react\n  };\n\n  function failure() {\n    alert(\"sorry couldn't log in \");\n  }\n\n  function signOut() {\n    var auth2 = gapi.auth2.getAuthInstance();\n    auth2.signOut().then(function () {\n      alert(\"sorry! you are out\");\n    });\n    fetch('http://localhost:5000/destroysession');\n  }\n\n  ;\n\n  function logoutfailure() {\n    alert(\"sorry we couldn't log out, try again later \");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Login-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(GoogleLogin, {\n    clientId: \"740831316427-m1qet5irfugkeva79brhb6s6nim8ds55.apps.googleusercontent.com\",\n    buttonText: \"Sign in with google\",\n    onSuccess: responseGoogle,\n    onFailure: failure,\n    cookiePolicy: 'single_host_origin',\n    isSignedIn: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(GoogleLogout, {\n    clientId: \"740831316427-m1qet5irfugkeva79brhb6s6nim8ds55.apps.googleusercontent.com\",\n    buttonText: \"Logout\",\n    responseType: \"code\",\n    onLogoutSuccess: signOut,\n    onFailure: logoutfailure,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }\n  })));\n}\n\nexport default Login;","map":{"version":3,"sources":["/home/selma/Bureau/DEV/React-Sample/my-app/client/src/components/Login.js"],"names":["React","useState","ReactDOM","GoogleLogin","Button","GoogleLogout","useGoogleLogin","Login","Authentificated","setAuthentificated","PostId","setPostId","responseGoogle","response","jwtoken","tokenId","ok","requestOptions","method","headers","body","fetch","then","res","json","failure","alert","signOut","auth2","gapi","getAuthInstance","logoutfailure"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,SAASC,cAAT,QAA+B,oBAA/B;AAGA;AAEA;;AAEA,SAASC,KAAT,GAAiB;AAEX,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCR,QAAQ,CAAC,KAAD,CAAtD,CAFW,CAIX;;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,IAAD,CAApC;;AAEA,QAAMW,cAAc,GAAGC,QAAQ,IAAI;AAC7B,UAAMC,OAAO,GAAGD,QAAQ,CAACE,OAAzB,CAD6B,CAE7B;;AAEA,UAAMC,EAAE,GAAG,IAAX,CAJ6B,CAK7B;AAEA;;AACA,UAAMC,cAAc,GAAG;AACjBC,MAAAA,MAAM,EAAE,MADS;AAEjBC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFQ;AAGjBC,MAAAA,IAAI,EAAEN,OAHW;AAGFE,MAAAA;AAHE,KAAvB;AAKAK,IAAAA,KAAK,CAAC,mCAAD,EAAsCJ,cAAtC,CAAL,CACOK,IADP,CACYC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADnB,EAb6B,CAe7B;AAGL,GAlBD;;AAoBA,WAASC,OAAT,GAAmB;AACbC,IAAAA,KAAK,CAAC,wBAAD,CAAL;AACL;;AAED,WAASC,OAAT,GAAmB;AACb,QAAIC,KAAK,GAAGC,IAAI,CAACD,KAAL,CAAWE,eAAX,EAAZ;AACAF,IAAAA,KAAK,CAACD,OAAN,GAAgBL,IAAhB,CAAqB,YAAY;AAC3BI,MAAAA,KAAK,CAAC,oBAAD,CAAL;AACL,KAFD;AAGAL,IAAAA,KAAK,CAAC,sCAAD,CAAL;AAEL;;AAAA;;AAID,WAASU,aAAT,GAAyB;AACnBL,IAAAA,KAAK,CAAC,6CAAD,CAAL;AACL;;AAED,sBACM;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACM,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACM,oBAAC,WAAD;AACM,IAAA,QAAQ,EAAC,0EADf;AAEM,IAAA,UAAU,EAAC,qBAFjB;AAGM,IAAA,SAAS,EAAEd,cAHjB;AAIM,IAAA,SAAS,EAAEa,OAJjB;AAKM,IAAA,YAAY,EAAE,oBALpB;AAMM,IAAA,UAAU,EAAE,IANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADN,CADN,eAaM,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACM,oBAAC,YAAD;AACM,IAAA,QAAQ,EAAC,0EADf;AAEM,IAAA,UAAU,EAAC,QAFjB;AAGM,IAAA,YAAY,EAAC,MAHnB;AAIM,IAAA,eAAe,EAAEE,OAJvB;AAKM,IAAA,SAAS,EAAEI,aALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADN,CAbN,CADN;AA2BL;;AAED,eAAexB,KAAf","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport GoogleLogin from 'react-google-login';\nimport Button from '@material-ui/core/Button';\nimport { GoogleLogout } from 'react-google-login';\nimport { useGoogleLogin } from 'react-google-login'\n\n\n/* global gapi */\n\n//LogIn using google Autho\n\nfunction Login() {\n\n      const [Authentificated, setAuthentificated] = useState(false);\n\n      // GET THE TOKEN FROM GOOGLE API\n      const [PostId, setPostId] = useState(null);\n\n      const responseGoogle = response => {\n            const jwtoken = response.tokenId;\n            // console.log(response.profileObj)\n\n            const ok = \"ok\";\n            // SEND THE TOKEN TO THE BACK END - EXPRESS\n\n            // POST request using fetch inside useEffect React hook\n            const requestOptions = {\n                  method: 'POST',\n                  headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n                  body: jwtoken, ok\n            };\n            fetch('http://localhost:5000/GoogleLogin', requestOptions)\n                  .then(res => res.json())\n            //    .then(res => console.log({ resultat: res })); // test communication from backend to react\n\n\n      };\n\n      function failure() {\n            alert(\"sorry couldn't log in \")\n      }\n\n      function signOut() {\n            var auth2 = gapi.auth2.getAuthInstance();\n            auth2.signOut().then(function () {\n                  alert(\"sorry! you are out\")\n            });\n            fetch('http://localhost:5000/destroysession')\n\n      };\n\n\n\n      function logoutfailure() {\n            alert(\"sorry we couldn't log out, try again later \")\n      }\n\n      return (\n            <div className=\"Login-button\">\n                  <Button >\n                        <GoogleLogin\n                              clientId=\"740831316427-m1qet5irfugkeva79brhb6s6nim8ds55.apps.googleusercontent.com\"\n                              buttonText=\"Sign in with google\"\n                              onSuccess={responseGoogle}\n                              onFailure={failure}\n                              cookiePolicy={'single_host_origin'}\n                              isSignedIn={true}\n                        />\n\n                  </Button>\n\n                  <Button>\n                        <GoogleLogout\n                              clientId=\"740831316427-m1qet5irfugkeva79brhb6s6nim8ds55.apps.googleusercontent.com\"\n                              buttonText=\"Logout\"\n                              responseType=\"code\"\n                              onLogoutSuccess={signOut}\n                              onFailure={logoutfailure}\n                        />\n                  </Button>\n\n            </div>\n\n      )\n}\n\nexport default Login;\n\n"]},"metadata":{},"sourceType":"module"}