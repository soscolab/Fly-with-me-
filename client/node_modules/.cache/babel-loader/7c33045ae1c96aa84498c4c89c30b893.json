{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport Drawer, { getAnchor, isHorizontal } from '../Drawer/Drawer';\nimport { duration } from '../styles/transitions';\nimport useTheme from '../styles/useTheme';\nimport { getTransitionProps } from '../transitions/utils';\nimport NoSsr from '../NoSsr';\nimport SwipeArea from './SwipeArea'; // This value is closed to what browsers are using internally to\n// trigger a native scroll.\n\nvar UNCERTAINTY_THRESHOLD = 3; // px\n// We can only have one node at the time claiming ownership for handling the swipe.\n// Otherwise, the UX would be confusing.\n// That's why we use a singleton here.\n\nvar nodeThatClaimedTheSwipe = null; // Exported for test purposes.\n\nexport function reset() {\n  nodeThatClaimedTheSwipe = null;\n}\n\nfunction calculateCurrentX(anchor, touches) {\n  return anchor === 'right' ? document.body.offsetWidth - touches[0].pageX : touches[0].pageX;\n}\n\nfunction calculateCurrentY(anchor, touches) {\n  return anchor === 'bottom' ? window.innerHeight - touches[0].clientY : touches[0].clientY;\n}\n\nfunction getMaxTranslate(horizontalSwipe, paperInstance) {\n  return horizontalSwipe ? paperInstance.clientWidth : paperInstance.clientHeight;\n}\n\nfunction getTranslate(currentTranslate, startLocation, open, maxTranslate) {\n  return Math.min(Math.max(open ? startLocation - currentTranslate : maxTranslate + startLocation - currentTranslate, 0), maxTranslate);\n}\n\nvar disableSwipeToOpenDefault = typeof navigator !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent);\nvar transitionDurationDefault = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\nvar useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\nvar SwipeableDrawer = React.forwardRef(function SwipeableDrawer(props, ref) {\n  var _props$anchor = props.anchor,\n      anchor = _props$anchor === void 0 ? 'left' : _props$anchor,\n      _props$disableBackdro = props.disableBackdropTransition,\n      disableBackdropTransition = _props$disableBackdro === void 0 ? false : _props$disableBackdro,\n      _props$disableDiscove = props.disableDiscovery,\n      disableDiscovery = _props$disableDiscove === void 0 ? false : _props$disableDiscove,\n      _props$disableSwipeTo = props.disableSwipeToOpen,\n      disableSwipeToOpen = _props$disableSwipeTo === void 0 ? disableSwipeToOpenDefault : _props$disableSwipeTo,\n      hideBackdrop = props.hideBackdrop,\n      _props$hysteresis = props.hysteresis,\n      hysteresis = _props$hysteresis === void 0 ? 0.55 : _props$hysteresis,\n      _props$minFlingVeloci = props.minFlingVelocity,\n      minFlingVelocity = _props$minFlingVeloci === void 0 ? 400 : _props$minFlingVeloci,\n      _props$ModalProps = props.ModalProps;\n  _props$ModalProps = _props$ModalProps === void 0 ? {} : _props$ModalProps;\n\n  var BackdropProps = _props$ModalProps.BackdropProps,\n      ModalPropsProp = _objectWithoutProperties(_props$ModalProps, [\"BackdropProps\"]),\n      onClose = props.onClose,\n      onOpen = props.onOpen,\n      open = props.open,\n      _props$PaperProps = props.PaperProps,\n      PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps,\n      SwipeAreaProps = props.SwipeAreaProps,\n      _props$swipeAreaWidth = props.swipeAreaWidth,\n      swipeAreaWidth = _props$swipeAreaWidth === void 0 ? 20 : _props$swipeAreaWidth,\n      _props$transitionDura = props.transitionDuration,\n      transitionDuration = _props$transitionDura === void 0 ? transitionDurationDefault : _props$transitionDura,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'temporary' : _props$variant,\n      other = _objectWithoutProperties(props, [\"anchor\", \"disableBackdropTransition\", \"disableDiscovery\", \"disableSwipeToOpen\", \"hideBackdrop\", \"hysteresis\", \"minFlingVelocity\", \"ModalProps\", \"onClose\", \"onOpen\", \"open\", \"PaperProps\", \"SwipeAreaProps\", \"swipeAreaWidth\", \"transitionDuration\", \"variant\"]);\n\n  var theme = useTheme();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      maybeSwiping = _React$useState2[0],\n      setMaybeSwiping = _React$useState2[1];\n\n  var swipeInstance = React.useRef({\n    isSwiping: null\n  });\n  var swipeAreaRef = React.useRef();\n  var backdropRef = React.useRef();\n  var paperRef = React.useRef();\n  var touchDetected = React.useRef(false);\n  var openRef = React.useRef(open); // Use a ref so the open value used is always up to date inside useCallback.\n\n  useEnhancedEffect(function () {\n    openRef.current = open;\n  }, [open]);\n  var setPosition = React.useCallback(function (translate) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var _options$mode = options.mode,\n        mode = _options$mode === void 0 ? null : _options$mode,\n        _options$changeTransi = options.changeTransition,\n        changeTransition = _options$changeTransi === void 0 ? true : _options$changeTransi;\n    var anchorRtl = getAnchor(theme, anchor);\n    var rtlTranslateMultiplier = ['right', 'bottom'].indexOf(anchorRtl) !== -1 ? 1 : -1;\n    var horizontalSwipe = isHorizontal(anchor);\n    var transform = horizontalSwipe ? \"translate(\".concat(rtlTranslateMultiplier * translate, \"px, 0)\") : \"translate(0, \".concat(rtlTranslateMultiplier * translate, \"px)\");\n    var drawerStyle = paperRef.current.style;\n    drawerStyle.webkitTransform = transform;\n    drawerStyle.transform = transform;\n    var transition = '';\n\n    if (mode) {\n      transition = theme.transitions.create('all', getTransitionProps({\n        timeout: transitionDuration\n      }, {\n        mode: mode\n      }));\n    }\n\n    if (changeTransition) {\n      drawerStyle.webkitTransition = transition;\n      drawerStyle.transition = transition;\n    }\n\n    if (!disableBackdropTransition && !hideBackdrop) {\n      var backdropStyle = backdropRef.current.style;\n      backdropStyle.opacity = 1 - translate / getMaxTranslate(horizontalSwipe, paperRef.current);\n\n      if (changeTransition) {\n        backdropStyle.webkitTransition = transition;\n        backdropStyle.transition = transition;\n      }\n    }\n  }, [anchor, disableBackdropTransition, hideBackdrop, theme, transitionDuration]);\n  var handleBodyTouchEnd = React.useCallback(function (event) {\n    if (!touchDetected.current) {\n      return;\n    }\n\n    nodeThatClaimedTheSwipe = null;\n    touchDetected.current = false;\n    setMaybeSwiping(false); // The swipe wasn't started.\n\n    if (!swipeInstance.current.isSwiping) {\n      swipeInstance.current.isSwiping = null;\n      return;\n    }\n\n    swipeInstance.current.isSwiping = null;\n    var anchorRtl = getAnchor(theme, anchor);\n    var horizontal = isHorizontal(anchor);\n    var current;\n\n    if (horizontal) {\n      current = calculateCurrentX(anchorRtl, event.changedTouches);\n    } else {\n      current = calculateCurrentY(anchorRtl, event.changedTouches);\n    }\n\n    var startLocation = horizontal ? swipeInstance.current.startX : swipeInstance.current.startY;\n    var maxTranslate = getMaxTranslate(horizontal, paperRef.current);\n    var currentTranslate = getTranslate(current, startLocation, openRef.current, maxTranslate);\n    var translateRatio = currentTranslate / maxTranslate;\n\n    if (openRef.current) {\n      if (swipeInstance.current.velocity > minFlingVelocity || translateRatio > hysteresis) {\n        onClose();\n      } else {\n        // Reset the position, the swipe was aborted.\n        setPosition(0, {\n          mode: 'exit'\n        });\n      }\n\n      return;\n    }\n\n    if (swipeInstance.current.velocity < -minFlingVelocity || 1 - translateRatio > hysteresis) {\n      onOpen();\n    } else {\n      // Reset the position, the swipe was aborted.\n      setPosition(getMaxTranslate(horizontal, paperRef.current), {\n        mode: 'enter'\n      });\n    }\n  }, [anchor, hysteresis, minFlingVelocity, onClose, onOpen, setPosition, theme]);\n  var handleBodyTouchMove = React.useCallback(function (event) {\n    // the ref may be null when a parent component updates while swiping\n    if (!paperRef.current || !touchDetected.current) {\n      return;\n    }\n\n    var anchorRtl = getAnchor(theme, anchor);\n    var horizontalSwipe = isHorizontal(anchor);\n    var currentX = calculateCurrentX(anchorRtl, event.touches);\n    var currentY = calculateCurrentY(anchorRtl, event.touches); // We don't know yet.\n\n    if (swipeInstance.current.isSwiping == null) {\n      var dx = Math.abs(currentX - swipeInstance.current.startX);\n      var dy = Math.abs(currentY - swipeInstance.current.startY); // We are likely to be swiping, let's prevent the scroll event on iOS.\n\n      if (dx > dy) {\n        if (event.cancelable) {\n          event.preventDefault();\n        }\n      }\n\n      var definitelySwiping = horizontalSwipe ? dx > dy && dx > UNCERTAINTY_THRESHOLD : dy > dx && dy > UNCERTAINTY_THRESHOLD;\n\n      if (definitelySwiping === true || (horizontalSwipe ? dy > UNCERTAINTY_THRESHOLD : dx > UNCERTAINTY_THRESHOLD)) {\n        swipeInstance.current.isSwiping = definitelySwiping;\n\n        if (!definitelySwiping) {\n          handleBodyTouchEnd(event);\n          return;\n        } // Shift the starting point.\n\n\n        swipeInstance.current.startX = currentX;\n        swipeInstance.current.startY = currentY; // Compensate for the part of the drawer displayed on touch start.\n\n        if (!disableDiscovery && !openRef.current) {\n          if (horizontalSwipe) {\n            swipeInstance.current.startX -= swipeAreaWidth;\n          } else {\n            swipeInstance.current.startY -= swipeAreaWidth;\n          }\n        }\n      }\n    }\n\n    if (!swipeInstance.current.isSwiping) {\n      return;\n    }\n\n    var startLocation = horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY;\n    var maxTranslate = getMaxTranslate(horizontalSwipe, paperRef.current);\n    var translate = getTranslate(horizontalSwipe ? currentX : currentY, startLocation, openRef.current, maxTranslate);\n\n    if (swipeInstance.current.lastTranslate === null) {\n      swipeInstance.current.lastTranslate = translate;\n      swipeInstance.current.lastTime = performance.now() + 1;\n    }\n\n    var velocity = (translate - swipeInstance.current.lastTranslate) / (performance.now() - swipeInstance.current.lastTime) * 1e3; // Low Pass filter.\n\n    swipeInstance.current.velocity = swipeInstance.current.velocity * 0.4 + velocity * 0.6;\n    swipeInstance.current.lastTranslate = translate;\n    swipeInstance.current.lastTime = performance.now(); // We are swiping, let's prevent the scroll event on iOS.\n\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n\n    setPosition(translate);\n  }, [setPosition, handleBodyTouchEnd, anchor, disableDiscovery, swipeAreaWidth, theme]);\n  var handleBodyTouchStart = React.useCallback(function (event) {\n    // We are not supposed to handle this touch move.\n    if (nodeThatClaimedTheSwipe !== null && nodeThatClaimedTheSwipe !== swipeInstance.current) {\n      return;\n    }\n\n    var anchorRtl = getAnchor(theme, anchor);\n    var horizontalSwipe = isHorizontal(anchor);\n    var currentX = calculateCurrentX(anchorRtl, event.touches);\n    var currentY = calculateCurrentY(anchorRtl, event.touches);\n\n    if (!openRef.current) {\n      if (disableSwipeToOpen || event.target !== swipeAreaRef.current) {\n        return;\n      }\n\n      if (horizontalSwipe) {\n        if (currentX > swipeAreaWidth) {\n          return;\n        }\n      } else if (currentY > swipeAreaWidth) {\n        return;\n      }\n    }\n\n    nodeThatClaimedTheSwipe = swipeInstance.current;\n    swipeInstance.current.startX = currentX;\n    swipeInstance.current.startY = currentY;\n    setMaybeSwiping(true);\n\n    if (!openRef.current && paperRef.current) {\n      // The ref may be null when a parent component updates while swiping.\n      setPosition(getMaxTranslate(horizontalSwipe, paperRef.current) + (disableDiscovery ? 20 : -swipeAreaWidth), {\n        changeTransition: false\n      });\n    }\n\n    swipeInstance.current.velocity = 0;\n    swipeInstance.current.lastTime = null;\n    swipeInstance.current.lastTranslate = null;\n    touchDetected.current = true;\n  }, [setPosition, anchor, disableDiscovery, disableSwipeToOpen, swipeAreaWidth, theme]);\n  React.useEffect(function () {\n    if (variant === 'temporary') {\n      document.body.addEventListener('touchstart', handleBodyTouchStart);\n      document.body.addEventListener('touchmove', handleBodyTouchMove, {\n        passive: false\n      });\n      document.body.addEventListener('touchend', handleBodyTouchEnd);\n      return function () {\n        document.body.removeEventListener('touchstart', handleBodyTouchStart);\n        document.body.removeEventListener('touchmove', handleBodyTouchMove, {\n          passive: false\n        });\n        document.body.removeEventListener('touchend', handleBodyTouchEnd);\n      };\n    }\n\n    return undefined;\n  }, [variant, handleBodyTouchStart, handleBodyTouchMove, handleBodyTouchEnd]);\n  React.useEffect(function () {\n    return function () {\n      // We need to release the lock.\n      if (nodeThatClaimedTheSwipe === swipeInstance.current) {\n        nodeThatClaimedTheSwipe = null;\n      }\n    };\n  }, []);\n  React.useEffect(function () {\n    if (!open) {\n      setMaybeSwiping(false);\n    }\n  }, [open]);\n  var handleBackdropRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    backdropRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  var handlePaperRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    paperRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(Drawer, _extends({\n    open: variant === 'temporary' && maybeSwiping ? true : open,\n    variant: variant,\n    ModalProps: _extends({\n      BackdropProps: _extends({}, BackdropProps, {\n        ref: handleBackdropRef\n      })\n    }, ModalPropsProp),\n    PaperProps: _extends({}, PaperProps, {\n      style: _extends({\n        pointerEvents: variant === 'temporary' && !open ? 'none' : ''\n      }, PaperProps.style),\n      ref: handlePaperRef\n    }),\n    anchor: anchor,\n    transitionDuration: transitionDuration,\n    onClose: onClose,\n    ref: ref\n  }, other)), !disableSwipeToOpen && variant === 'temporary' && React.createElement(NoSsr, null, React.createElement(SwipeArea, _extends({\n    anchor: anchor,\n    ref: swipeAreaRef,\n    width: swipeAreaWidth\n  }, SwipeAreaProps))));\n});\nprocess.env.NODE_ENV !== \"production\" ? SwipeableDrawer.propTypes = {\n  /**\n   * @ignore\n   */\n  anchor: PropTypes.oneOf(['left', 'top', 'right', 'bottom']),\n\n  /**\n   * Disable the backdrop transition.\n   * This can improve the FPS on low-end devices.\n   */\n  disableBackdropTransition: PropTypes.bool,\n\n  /**\n   * If `true`, touching the screen near the edge of the drawer will not slide in the drawer a bit\n   * to promote accidental discovery of the swipe gesture.\n   */\n  disableDiscovery: PropTypes.bool,\n\n  /**\n   * If `true`, swipe to open is disabled. This is useful in browsers where swiping triggers\n   * navigation actions. Swipe to open is disabled on iOS browsers by default.\n   */\n  disableSwipeToOpen: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  hideBackdrop: PropTypes.bool,\n\n  /**\n   * Affects how far the drawer must be opened/closed to change his state.\n   * Specified as percent (0-1) of the width of the drawer\n   */\n  hysteresis: PropTypes.number,\n\n  /**\n   * Defines, from which (average) velocity on, the swipe is\n   * defined as complete although hysteresis isn't reached.\n   * Good threshold is between 250 - 1000 px/s\n   */\n  minFlingVelocity: PropTypes.number,\n\n  /**\n   * @ignore\n   */\n  ModalProps: PropTypes.shape({\n    BackdropProps: PropTypes.shape({\n      component: elementTypeAcceptingRef\n    })\n  }),\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback\n   */\n  onClose: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the component requests to be opened.\n   *\n   * @param {object} event The event source of the callback\n   */\n  onOpen: PropTypes.func.isRequired,\n\n  /**\n   * If `true`, the drawer is open.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * @ignore\n   */\n  PaperProps: PropTypes.shape({\n    component: elementTypeAcceptingRef,\n    style: PropTypes.object\n  }),\n\n  /**\n   * Props applied to the swipe area element.\n   */\n  SwipeAreaProps: PropTypes.object,\n\n  /**\n   * The width of the left most (or right most) area in pixels where the\n   * drawer can be swiped open from.\n   */\n  swipeAreaWidth: PropTypes.number,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * @ignore\n   */\n  variant: PropTypes.oneOf(['permanent', 'persistent', 'temporary'])\n} : void 0;\nexport default SwipeableDrawer;","map":{"version":3,"sources":["/home/selma/Bureau/DEV/React-Sample/my-app/node_modules/@material-ui/core/esm/SwipeableDrawer/SwipeableDrawer.js"],"names":["_extends","_slicedToArray","_objectWithoutProperties","React","PropTypes","ReactDOM","elementTypeAcceptingRef","Drawer","getAnchor","isHorizontal","duration","useTheme","getTransitionProps","NoSsr","SwipeArea","UNCERTAINTY_THRESHOLD","nodeThatClaimedTheSwipe","reset","calculateCurrentX","anchor","touches","document","body","offsetWidth","pageX","calculateCurrentY","window","innerHeight","clientY","getMaxTranslate","horizontalSwipe","paperInstance","clientWidth","clientHeight","getTranslate","currentTranslate","startLocation","open","maxTranslate","Math","min","max","disableSwipeToOpenDefault","navigator","test","userAgent","transitionDurationDefault","enter","enteringScreen","exit","leavingScreen","useEnhancedEffect","useLayoutEffect","useEffect","SwipeableDrawer","forwardRef","props","ref","_props$anchor","_props$disableBackdro","disableBackdropTransition","_props$disableDiscove","disableDiscovery","_props$disableSwipeTo","disableSwipeToOpen","hideBackdrop","_props$hysteresis","hysteresis","_props$minFlingVeloci","minFlingVelocity","_props$ModalProps","ModalProps","BackdropProps","ModalPropsProp","onClose","onOpen","_props$PaperProps","PaperProps","SwipeAreaProps","_props$swipeAreaWidth","swipeAreaWidth","_props$transitionDura","transitionDuration","_props$variant","variant","other","theme","_React$useState","useState","_React$useState2","maybeSwiping","setMaybeSwiping","swipeInstance","useRef","isSwiping","swipeAreaRef","backdropRef","paperRef","touchDetected","openRef","current","setPosition","useCallback","translate","options","arguments","length","undefined","_options$mode","mode","_options$changeTransi","changeTransition","anchorRtl","rtlTranslateMultiplier","indexOf","transform","concat","drawerStyle","style","webkitTransform","transition","transitions","create","timeout","webkitTransition","backdropStyle","opacity","handleBodyTouchEnd","event","horizontal","changedTouches","startX","startY","translateRatio","velocity","handleBodyTouchMove","currentX","currentY","dx","abs","dy","cancelable","preventDefault","definitelySwiping","lastTranslate","lastTime","performance","now","handleBodyTouchStart","target","addEventListener","passive","removeEventListener","handleBackdropRef","instance","findDOMNode","handlePaperRef","createElement","Fragment","pointerEvents","width","process","env","NODE_ENV","propTypes","oneOf","bool","number","shape","component","func","isRequired","object","oneOfType"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport Drawer, { getAnchor, isHorizontal } from '../Drawer/Drawer';\nimport { duration } from '../styles/transitions';\nimport useTheme from '../styles/useTheme';\nimport { getTransitionProps } from '../transitions/utils';\nimport NoSsr from '../NoSsr';\nimport SwipeArea from './SwipeArea'; // This value is closed to what browsers are using internally to\n// trigger a native scroll.\n\nvar UNCERTAINTY_THRESHOLD = 3; // px\n// We can only have one node at the time claiming ownership for handling the swipe.\n// Otherwise, the UX would be confusing.\n// That's why we use a singleton here.\n\nvar nodeThatClaimedTheSwipe = null; // Exported for test purposes.\n\nexport function reset() {\n  nodeThatClaimedTheSwipe = null;\n}\n\nfunction calculateCurrentX(anchor, touches) {\n  return anchor === 'right' ? document.body.offsetWidth - touches[0].pageX : touches[0].pageX;\n}\n\nfunction calculateCurrentY(anchor, touches) {\n  return anchor === 'bottom' ? window.innerHeight - touches[0].clientY : touches[0].clientY;\n}\n\nfunction getMaxTranslate(horizontalSwipe, paperInstance) {\n  return horizontalSwipe ? paperInstance.clientWidth : paperInstance.clientHeight;\n}\n\nfunction getTranslate(currentTranslate, startLocation, open, maxTranslate) {\n  return Math.min(Math.max(open ? startLocation - currentTranslate : maxTranslate + startLocation - currentTranslate, 0), maxTranslate);\n}\n\nvar disableSwipeToOpenDefault = typeof navigator !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent);\nvar transitionDurationDefault = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\nvar useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\nvar SwipeableDrawer = React.forwardRef(function SwipeableDrawer(props, ref) {\n  var _props$anchor = props.anchor,\n      anchor = _props$anchor === void 0 ? 'left' : _props$anchor,\n      _props$disableBackdro = props.disableBackdropTransition,\n      disableBackdropTransition = _props$disableBackdro === void 0 ? false : _props$disableBackdro,\n      _props$disableDiscove = props.disableDiscovery,\n      disableDiscovery = _props$disableDiscove === void 0 ? false : _props$disableDiscove,\n      _props$disableSwipeTo = props.disableSwipeToOpen,\n      disableSwipeToOpen = _props$disableSwipeTo === void 0 ? disableSwipeToOpenDefault : _props$disableSwipeTo,\n      hideBackdrop = props.hideBackdrop,\n      _props$hysteresis = props.hysteresis,\n      hysteresis = _props$hysteresis === void 0 ? 0.55 : _props$hysteresis,\n      _props$minFlingVeloci = props.minFlingVelocity,\n      minFlingVelocity = _props$minFlingVeloci === void 0 ? 400 : _props$minFlingVeloci,\n      _props$ModalProps = props.ModalProps;\n  _props$ModalProps = _props$ModalProps === void 0 ? {} : _props$ModalProps;\n\n  var BackdropProps = _props$ModalProps.BackdropProps,\n      ModalPropsProp = _objectWithoutProperties(_props$ModalProps, [\"BackdropProps\"]),\n      onClose = props.onClose,\n      onOpen = props.onOpen,\n      open = props.open,\n      _props$PaperProps = props.PaperProps,\n      PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps,\n      SwipeAreaProps = props.SwipeAreaProps,\n      _props$swipeAreaWidth = props.swipeAreaWidth,\n      swipeAreaWidth = _props$swipeAreaWidth === void 0 ? 20 : _props$swipeAreaWidth,\n      _props$transitionDura = props.transitionDuration,\n      transitionDuration = _props$transitionDura === void 0 ? transitionDurationDefault : _props$transitionDura,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'temporary' : _props$variant,\n      other = _objectWithoutProperties(props, [\"anchor\", \"disableBackdropTransition\", \"disableDiscovery\", \"disableSwipeToOpen\", \"hideBackdrop\", \"hysteresis\", \"minFlingVelocity\", \"ModalProps\", \"onClose\", \"onOpen\", \"open\", \"PaperProps\", \"SwipeAreaProps\", \"swipeAreaWidth\", \"transitionDuration\", \"variant\"]);\n\n  var theme = useTheme();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      maybeSwiping = _React$useState2[0],\n      setMaybeSwiping = _React$useState2[1];\n\n  var swipeInstance = React.useRef({\n    isSwiping: null\n  });\n  var swipeAreaRef = React.useRef();\n  var backdropRef = React.useRef();\n  var paperRef = React.useRef();\n  var touchDetected = React.useRef(false);\n  var openRef = React.useRef(open); // Use a ref so the open value used is always up to date inside useCallback.\n\n  useEnhancedEffect(function () {\n    openRef.current = open;\n  }, [open]);\n  var setPosition = React.useCallback(function (translate) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var _options$mode = options.mode,\n        mode = _options$mode === void 0 ? null : _options$mode,\n        _options$changeTransi = options.changeTransition,\n        changeTransition = _options$changeTransi === void 0 ? true : _options$changeTransi;\n    var anchorRtl = getAnchor(theme, anchor);\n    var rtlTranslateMultiplier = ['right', 'bottom'].indexOf(anchorRtl) !== -1 ? 1 : -1;\n    var horizontalSwipe = isHorizontal(anchor);\n    var transform = horizontalSwipe ? \"translate(\".concat(rtlTranslateMultiplier * translate, \"px, 0)\") : \"translate(0, \".concat(rtlTranslateMultiplier * translate, \"px)\");\n    var drawerStyle = paperRef.current.style;\n    drawerStyle.webkitTransform = transform;\n    drawerStyle.transform = transform;\n    var transition = '';\n\n    if (mode) {\n      transition = theme.transitions.create('all', getTransitionProps({\n        timeout: transitionDuration\n      }, {\n        mode: mode\n      }));\n    }\n\n    if (changeTransition) {\n      drawerStyle.webkitTransition = transition;\n      drawerStyle.transition = transition;\n    }\n\n    if (!disableBackdropTransition && !hideBackdrop) {\n      var backdropStyle = backdropRef.current.style;\n      backdropStyle.opacity = 1 - translate / getMaxTranslate(horizontalSwipe, paperRef.current);\n\n      if (changeTransition) {\n        backdropStyle.webkitTransition = transition;\n        backdropStyle.transition = transition;\n      }\n    }\n  }, [anchor, disableBackdropTransition, hideBackdrop, theme, transitionDuration]);\n  var handleBodyTouchEnd = React.useCallback(function (event) {\n    if (!touchDetected.current) {\n      return;\n    }\n\n    nodeThatClaimedTheSwipe = null;\n    touchDetected.current = false;\n    setMaybeSwiping(false); // The swipe wasn't started.\n\n    if (!swipeInstance.current.isSwiping) {\n      swipeInstance.current.isSwiping = null;\n      return;\n    }\n\n    swipeInstance.current.isSwiping = null;\n    var anchorRtl = getAnchor(theme, anchor);\n    var horizontal = isHorizontal(anchor);\n    var current;\n\n    if (horizontal) {\n      current = calculateCurrentX(anchorRtl, event.changedTouches);\n    } else {\n      current = calculateCurrentY(anchorRtl, event.changedTouches);\n    }\n\n    var startLocation = horizontal ? swipeInstance.current.startX : swipeInstance.current.startY;\n    var maxTranslate = getMaxTranslate(horizontal, paperRef.current);\n    var currentTranslate = getTranslate(current, startLocation, openRef.current, maxTranslate);\n    var translateRatio = currentTranslate / maxTranslate;\n\n    if (openRef.current) {\n      if (swipeInstance.current.velocity > minFlingVelocity || translateRatio > hysteresis) {\n        onClose();\n      } else {\n        // Reset the position, the swipe was aborted.\n        setPosition(0, {\n          mode: 'exit'\n        });\n      }\n\n      return;\n    }\n\n    if (swipeInstance.current.velocity < -minFlingVelocity || 1 - translateRatio > hysteresis) {\n      onOpen();\n    } else {\n      // Reset the position, the swipe was aborted.\n      setPosition(getMaxTranslate(horizontal, paperRef.current), {\n        mode: 'enter'\n      });\n    }\n  }, [anchor, hysteresis, minFlingVelocity, onClose, onOpen, setPosition, theme]);\n  var handleBodyTouchMove = React.useCallback(function (event) {\n    // the ref may be null when a parent component updates while swiping\n    if (!paperRef.current || !touchDetected.current) {\n      return;\n    }\n\n    var anchorRtl = getAnchor(theme, anchor);\n    var horizontalSwipe = isHorizontal(anchor);\n    var currentX = calculateCurrentX(anchorRtl, event.touches);\n    var currentY = calculateCurrentY(anchorRtl, event.touches); // We don't know yet.\n\n    if (swipeInstance.current.isSwiping == null) {\n      var dx = Math.abs(currentX - swipeInstance.current.startX);\n      var dy = Math.abs(currentY - swipeInstance.current.startY); // We are likely to be swiping, let's prevent the scroll event on iOS.\n\n      if (dx > dy) {\n        if (event.cancelable) {\n          event.preventDefault();\n        }\n      }\n\n      var definitelySwiping = horizontalSwipe ? dx > dy && dx > UNCERTAINTY_THRESHOLD : dy > dx && dy > UNCERTAINTY_THRESHOLD;\n\n      if (definitelySwiping === true || (horizontalSwipe ? dy > UNCERTAINTY_THRESHOLD : dx > UNCERTAINTY_THRESHOLD)) {\n        swipeInstance.current.isSwiping = definitelySwiping;\n\n        if (!definitelySwiping) {\n          handleBodyTouchEnd(event);\n          return;\n        } // Shift the starting point.\n\n\n        swipeInstance.current.startX = currentX;\n        swipeInstance.current.startY = currentY; // Compensate for the part of the drawer displayed on touch start.\n\n        if (!disableDiscovery && !openRef.current) {\n          if (horizontalSwipe) {\n            swipeInstance.current.startX -= swipeAreaWidth;\n          } else {\n            swipeInstance.current.startY -= swipeAreaWidth;\n          }\n        }\n      }\n    }\n\n    if (!swipeInstance.current.isSwiping) {\n      return;\n    }\n\n    var startLocation = horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY;\n    var maxTranslate = getMaxTranslate(horizontalSwipe, paperRef.current);\n    var translate = getTranslate(horizontalSwipe ? currentX : currentY, startLocation, openRef.current, maxTranslate);\n\n    if (swipeInstance.current.lastTranslate === null) {\n      swipeInstance.current.lastTranslate = translate;\n      swipeInstance.current.lastTime = performance.now() + 1;\n    }\n\n    var velocity = (translate - swipeInstance.current.lastTranslate) / (performance.now() - swipeInstance.current.lastTime) * 1e3; // Low Pass filter.\n\n    swipeInstance.current.velocity = swipeInstance.current.velocity * 0.4 + velocity * 0.6;\n    swipeInstance.current.lastTranslate = translate;\n    swipeInstance.current.lastTime = performance.now(); // We are swiping, let's prevent the scroll event on iOS.\n\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n\n    setPosition(translate);\n  }, [setPosition, handleBodyTouchEnd, anchor, disableDiscovery, swipeAreaWidth, theme]);\n  var handleBodyTouchStart = React.useCallback(function (event) {\n    // We are not supposed to handle this touch move.\n    if (nodeThatClaimedTheSwipe !== null && nodeThatClaimedTheSwipe !== swipeInstance.current) {\n      return;\n    }\n\n    var anchorRtl = getAnchor(theme, anchor);\n    var horizontalSwipe = isHorizontal(anchor);\n    var currentX = calculateCurrentX(anchorRtl, event.touches);\n    var currentY = calculateCurrentY(anchorRtl, event.touches);\n\n    if (!openRef.current) {\n      if (disableSwipeToOpen || event.target !== swipeAreaRef.current) {\n        return;\n      }\n\n      if (horizontalSwipe) {\n        if (currentX > swipeAreaWidth) {\n          return;\n        }\n      } else if (currentY > swipeAreaWidth) {\n        return;\n      }\n    }\n\n    nodeThatClaimedTheSwipe = swipeInstance.current;\n    swipeInstance.current.startX = currentX;\n    swipeInstance.current.startY = currentY;\n    setMaybeSwiping(true);\n\n    if (!openRef.current && paperRef.current) {\n      // The ref may be null when a parent component updates while swiping.\n      setPosition(getMaxTranslate(horizontalSwipe, paperRef.current) + (disableDiscovery ? 20 : -swipeAreaWidth), {\n        changeTransition: false\n      });\n    }\n\n    swipeInstance.current.velocity = 0;\n    swipeInstance.current.lastTime = null;\n    swipeInstance.current.lastTranslate = null;\n    touchDetected.current = true;\n  }, [setPosition, anchor, disableDiscovery, disableSwipeToOpen, swipeAreaWidth, theme]);\n  React.useEffect(function () {\n    if (variant === 'temporary') {\n      document.body.addEventListener('touchstart', handleBodyTouchStart);\n      document.body.addEventListener('touchmove', handleBodyTouchMove, {\n        passive: false\n      });\n      document.body.addEventListener('touchend', handleBodyTouchEnd);\n      return function () {\n        document.body.removeEventListener('touchstart', handleBodyTouchStart);\n        document.body.removeEventListener('touchmove', handleBodyTouchMove, {\n          passive: false\n        });\n        document.body.removeEventListener('touchend', handleBodyTouchEnd);\n      };\n    }\n\n    return undefined;\n  }, [variant, handleBodyTouchStart, handleBodyTouchMove, handleBodyTouchEnd]);\n  React.useEffect(function () {\n    return function () {\n      // We need to release the lock.\n      if (nodeThatClaimedTheSwipe === swipeInstance.current) {\n        nodeThatClaimedTheSwipe = null;\n      }\n    };\n  }, []);\n  React.useEffect(function () {\n    if (!open) {\n      setMaybeSwiping(false);\n    }\n  }, [open]);\n  var handleBackdropRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    backdropRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  var handlePaperRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    paperRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(Drawer, _extends({\n    open: variant === 'temporary' && maybeSwiping ? true : open,\n    variant: variant,\n    ModalProps: _extends({\n      BackdropProps: _extends({}, BackdropProps, {\n        ref: handleBackdropRef\n      })\n    }, ModalPropsProp),\n    PaperProps: _extends({}, PaperProps, {\n      style: _extends({\n        pointerEvents: variant === 'temporary' && !open ? 'none' : ''\n      }, PaperProps.style),\n      ref: handlePaperRef\n    }),\n    anchor: anchor,\n    transitionDuration: transitionDuration,\n    onClose: onClose,\n    ref: ref\n  }, other)), !disableSwipeToOpen && variant === 'temporary' && React.createElement(NoSsr, null, React.createElement(SwipeArea, _extends({\n    anchor: anchor,\n    ref: swipeAreaRef,\n    width: swipeAreaWidth\n  }, SwipeAreaProps))));\n});\nprocess.env.NODE_ENV !== \"production\" ? SwipeableDrawer.propTypes = {\n  /**\n   * @ignore\n   */\n  anchor: PropTypes.oneOf(['left', 'top', 'right', 'bottom']),\n\n  /**\n   * Disable the backdrop transition.\n   * This can improve the FPS on low-end devices.\n   */\n  disableBackdropTransition: PropTypes.bool,\n\n  /**\n   * If `true`, touching the screen near the edge of the drawer will not slide in the drawer a bit\n   * to promote accidental discovery of the swipe gesture.\n   */\n  disableDiscovery: PropTypes.bool,\n\n  /**\n   * If `true`, swipe to open is disabled. This is useful in browsers where swiping triggers\n   * navigation actions. Swipe to open is disabled on iOS browsers by default.\n   */\n  disableSwipeToOpen: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  hideBackdrop: PropTypes.bool,\n\n  /**\n   * Affects how far the drawer must be opened/closed to change his state.\n   * Specified as percent (0-1) of the width of the drawer\n   */\n  hysteresis: PropTypes.number,\n\n  /**\n   * Defines, from which (average) velocity on, the swipe is\n   * defined as complete although hysteresis isn't reached.\n   * Good threshold is between 250 - 1000 px/s\n   */\n  minFlingVelocity: PropTypes.number,\n\n  /**\n   * @ignore\n   */\n  ModalProps: PropTypes.shape({\n    BackdropProps: PropTypes.shape({\n      component: elementTypeAcceptingRef\n    })\n  }),\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback\n   */\n  onClose: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the component requests to be opened.\n   *\n   * @param {object} event The event source of the callback\n   */\n  onOpen: PropTypes.func.isRequired,\n\n  /**\n   * If `true`, the drawer is open.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * @ignore\n   */\n  PaperProps: PropTypes.shape({\n    component: elementTypeAcceptingRef,\n    style: PropTypes.object\n  }),\n\n  /**\n   * Props applied to the swipe area element.\n   */\n  SwipeAreaProps: PropTypes.object,\n\n  /**\n   * The width of the left most (or right most) area in pixels where the\n   * drawer can be swiped open from.\n   */\n  swipeAreaWidth: PropTypes.number,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * @ignore\n   */\n  variant: PropTypes.oneOf(['permanent', 'persistent', 'temporary'])\n} : void 0;\nexport default SwipeableDrawer;"]},"metadata":{},"sourceType":"module"}