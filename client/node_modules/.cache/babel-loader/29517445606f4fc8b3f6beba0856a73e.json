{"ast":null,"code":"var _jsxFileName = \"/home/selma/Bureau/DEV/React-Sample/my-app/src/Components/context.js\";\n// context.js\nimport React, { createContext, useReducer } from 'react';\nconst initialState = {};\nconst store = createContext(initialState);\nconst {\n  Provider\n} = store;\n\nconst StateProvider = ({\n  children\n}) => {\n  const [state, dispatch] = useReducer((state, action) => {\n    switch (action.type) {\n      case 'action description':\n        const newState = {};\n        return newState;\n\n      default:\n        throw new Error();\n    }\n\n    ;\n  }, initialState);\n  return /*#__PURE__*/React.createElement(Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }\n  }, children);\n};\n\nexport { store, StateProvider };","map":{"version":3,"sources":["/home/selma/Bureau/DEV/React-Sample/my-app/src/Components/context.js"],"names":["React","createContext","useReducer","initialState","store","Provider","StateProvider","children","state","dispatch","action","type","newState","Error"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AAEA,MAAMC,YAAY,GAAG,EAArB;AACA,MAAMC,KAAK,GAAGH,aAAa,CAACE,YAAD,CAA3B;AACA,MAAM;AAAEE,EAAAA;AAAF,IAAeD,KAArB;;AAEA,MAAME,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACpC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,UAAU,CAAC,CAACM,KAAD,EAAQE,MAAR,KAAmB;AACpD,YAAQA,MAAM,CAACC,IAAf;AACI,WAAK,oBAAL;AACI,cAAMC,QAAQ,GAAG,EAAjB;AACA,eAAOA,QAAP;;AACJ;AACI,cAAM,IAAIC,KAAJ,EAAN;AALR;;AAMC;AACJ,GARmC,EAQjCV,YARiC,CAApC;AAUA,sBAAO,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE;AAAEK,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuCF,QAAvC,CAAP;AACH,CAZD;;AAcA,SAASH,KAAT,EAAgBE,aAAhB","sourcesContent":["// context.js\nimport React, { createContext, useReducer } from 'react';\n\nconst initialState = {};\nconst store = createContext(initialState);\nconst { Provider } = store;\n\nconst StateProvider = ({ children }) => {\n    const [state, dispatch] = useReducer((state, action) => {\n        switch (action.type) {\n            case 'action description':\n                const newState = {}\n                return newState;\n            default:\n                throw new Error();\n        };\n    }, initialState);\n\n    return <Provider value={{ state, dispatch }}>{children}</Provider>;\n};\n\nexport { store, StateProvider }"]},"metadata":{},"sourceType":"module"}