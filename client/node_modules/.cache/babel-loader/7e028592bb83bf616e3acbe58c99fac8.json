{"ast":null,"code":"var _jsxFileName = \"/home/selma/Bureau/DEV/React-Sample/my-app/client/src/components/Login.js\";\nimport React, { Component } from 'react';\nimport { GoogleLogin } from 'react-google-login';\n\nclass Login extends Component {\n  constructor() {\n    super();\n\n    this.logout = () => {\n      this.setState({\n        isAuthenticated: false,\n        token: '',\n        user: null\n      });\n    };\n\n    this.onFailure = error => {\n      alert(error);\n    };\n\n    this.googleResponse = response => {\n      const tokenBlob = new Blob([JSON.stringify({\n        access_token: response.accessToken\n      }, null, 2)], {\n        type: 'application/json'\n      });\n      const options = {\n        method: 'POST',\n        body: tokenBlob,\n        mode: 'cors',\n        cache: 'default'\n      };\n      fetch('http://localhost:3000/api/v1/auth/google', options).then(r => {\n        const token = r.headers.get('x-auth-token');\n        r.json().then(user => {\n          if (token) {\n            this.setState({\n              isAuthenticated: true,\n              user,\n              token\n            });\n          }\n        });\n      });\n    };\n\n    this.state = {\n      isAuthenticated: false,\n      user: null,\n      token: ''\n    };\n  }\n\n  render() {\n    let content = !!this.state.isAuthenticated ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 31\n      }\n    }, \"Authenticated\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 31\n      }\n    }, this.state.user.email), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.logout,\n      className: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 37\n      }\n    }, \"Log out\"))) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(GoogleLogin, {\n      clientId: config.GOOGLE_CLIENT_ID,\n      buttonText: \"Login\",\n      onSuccess: this.googleResponse,\n      onFailure: this.onFailure,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 31\n      }\n    }));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 19\n      }\n    }, content);\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/home/selma/Bureau/DEV/React-Sample/my-app/client/src/components/Login.js"],"names":["React","Component","GoogleLogin","Login","constructor","logout","setState","isAuthenticated","token","user","onFailure","error","alert","googleResponse","response","tokenBlob","Blob","JSON","stringify","access_token","accessToken","type","options","method","body","mode","cache","fetch","then","r","headers","get","json","state","render","content","email","config","GOOGLE_CLIENT_ID"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,oBAA5B;;AAEA,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AAExBG,EAAAA,WAAW,GAAG;AACR;;AADQ,SAKdC,MALc,GAKL,MAAM;AACT,WAAKC,QAAL,CAAc;AAAEC,QAAAA,eAAe,EAAE,KAAnB;AAA0BC,QAAAA,KAAK,EAAE,EAAjC;AAAqCC,QAAAA,IAAI,EAAE;AAA3C,OAAd;AACL,KAPa;;AAAA,SASdC,SATc,GASDC,KAAD,IAAW;AACjBC,MAAAA,KAAK,CAACD,KAAD,CAAL;AACL,KAXa;;AAAA,SAiBdE,cAjBc,GAiBIC,QAAD,IAAc;AACzB,YAAMC,SAAS,GAAG,IAAIC,IAAJ,CAAS,CAACC,IAAI,CAACC,SAAL,CAAe;AAAEC,QAAAA,YAAY,EAAEL,QAAQ,CAACM;AAAzB,OAAf,EAAuD,IAAvD,EAA6D,CAA7D,CAAD,CAAT,EAA4E;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAA5E,CAAlB;AACA,YAAMC,OAAO,GAAG;AACVC,QAAAA,MAAM,EAAE,MADE;AAEVC,QAAAA,IAAI,EAAET,SAFI;AAGVU,QAAAA,IAAI,EAAE,MAHI;AAIVC,QAAAA,KAAK,EAAE;AAJG,OAAhB;AAMAC,MAAAA,KAAK,CAAC,0CAAD,EAA6CL,OAA7C,CAAL,CAA2DM,IAA3D,CAAgEC,CAAC,IAAI;AAC/D,cAAMrB,KAAK,GAAGqB,CAAC,CAACC,OAAF,CAAUC,GAAV,CAAc,cAAd,CAAd;AACAF,QAAAA,CAAC,CAACG,IAAF,GAASJ,IAAT,CAAcnB,IAAI,IAAI;AAChB,cAAID,KAAJ,EAAW;AACL,iBAAKF,QAAL,CAAc;AAAEC,cAAAA,eAAe,EAAE,IAAnB;AAAyBE,cAAAA,IAAzB;AAA+BD,cAAAA;AAA/B,aAAd;AACL;AACN,SAJD;AAKL,OAPD;AAQL,KAjCa;;AAER,SAAKyB,KAAL,GAAa;AAAE1B,MAAAA,eAAe,EAAE,KAAnB;AAA0BE,MAAAA,IAAI,EAAE,IAAhC;AAAsCD,MAAAA,KAAK,EAAE;AAA7C,KAAb;AACL;;AAgCD0B,EAAAA,MAAM,GAAG;AACH,QAAIC,OAAO,GAAG,CAAC,CAAC,KAAKF,KAAL,CAAW1B,eAAb,gBAEF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADN,eAEM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACO,KAAK0B,KAAL,CAAWxB,IAAX,CAAgB2B,KADvB,CAFN,eAKM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACM;AAAQ,MAAA,OAAO,EAAE,KAAK/B,MAAtB;AAA8B,MAAA,SAAS,EAAC,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADN,CALN,CAFE,gBAeF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEM,oBAAC,WAAD;AACM,MAAA,QAAQ,EAAEgC,MAAM,CAACC,gBADvB;AAEM,MAAA,UAAU,EAAC,OAFjB;AAGM,MAAA,SAAS,EAAE,KAAKzB,cAHtB;AAIM,MAAA,SAAS,EAAE,KAAKH,SAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFN,CAfZ;AA0BA,wBACM;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACOyB,OADP,CADN;AAKL;;AArEuB;;AAwE9B,eAAehC,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport { GoogleLogin } from 'react-google-login';\n\nclass Login extends Component {\n\n      constructor() {\n            super();\n            this.state = { isAuthenticated: false, user: null, token: '' };\n      }\n\n      logout = () => {\n            this.setState({ isAuthenticated: false, token: '', user: null })\n      };\n\n      onFailure = (error) => {\n            alert(error);\n      };\n\n\n\n\n\n      googleResponse = (response) => {\n            const tokenBlob = new Blob([JSON.stringify({ access_token: response.accessToken }, null, 2)], { type: 'application/json' });\n            const options = {\n                  method: 'POST',\n                  body: tokenBlob,\n                  mode: 'cors',\n                  cache: 'default'\n            };\n            fetch('http://localhost:3000/api/v1/auth/google', options).then(r => {\n                  const token = r.headers.get('x-auth-token');\n                  r.json().then(user => {\n                        if (token) {\n                              this.setState({ isAuthenticated: true, user, token })\n                        }\n                  });\n            })\n      };\n\n      render() {\n            let content = !!this.state.isAuthenticated ?\n                  (\n                        <div>\n                              <p>Authenticated</p>\n                              <div>\n                                    {this.state.user.email}\n                              </div>\n                              <div>\n                                    <button onClick={this.logout} className=\"button\">\n                                          Log out\n                        </button>\n                              </div>\n                        </div>\n                  ) :\n                  (\n                        <div>\n\n                              <GoogleLogin\n                                    clientId={config.GOOGLE_CLIENT_ID}\n                                    buttonText=\"Login\"\n                                    onSuccess={this.googleResponse}\n                                    onFailure={this.onFailure}\n                              />\n                        </div>\n                  );\n\n            return (\n                  <div className=\"App\">\n                        {content}\n                  </div>\n            );\n      }\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}