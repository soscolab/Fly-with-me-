{"ast":null,"code":"var _jsxFileName = \"/home/selma/Bureau/DEV/React-Sample/my-app/client/src/components/chatroom.js\";\nimport React, { useState } from 'react';\nimport Jitsi from 'react-jitsi';\nimport NewWindow from 'react-new-window';\nconst roomName = 'my-super-secret-meeting-123e4567-e89b-12d3-a456-426655440000';\nconst userFullName = 'Joseph Strawberry';\nconst test = window.my_special_setting;\nconsole.log(test);\n\nconst Chat = () => {\n  console.log(test);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 22\n    }\n  }, \"My First Meeting!\"), /*#__PURE__*/React.createElement(Jitsi, {\n    roomName: test,\n    displayName: userFullName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 22\n    }\n  }));\n};\n\nexport default Chat;\n/* global gapi */\n\n/*\nfunction Chat() {\n\n\n\n       function checklogin() {\n              //   fetch('http://localhost:5000/testlog')\n              window.test();\n       }\n       return (\n              <div className=\"card text-center m-3\">\n                     <h5 className=\"card-header\">\n                            Simple POST Request</h5>\n                     <div className=\"card-body\">\n                            HOLA\n                            <button onClick={checklogin}> Create Room\n                                   </button>\n                     </div>\n              </div>\n       )\n\n}\nexport default Chat;\n\n\n\n\n*/\n//HOW TO SET A POST REQUEST TO AN EXTERNAL API\n// STORE USER IN DATABASE\n\n/*const [PostId, setPostId] = useState(null);\n\nuseEffect(() => {\n\n       // POST request using fetch inside useEffect React hook\n       const requestOptions = {\n              method: 'POST',\n              headers: { 'Content-Type': 'application/json' },\n              body: JSON.stringify({\n                     id: \"4\",\n                     name: \"t\",\n                     email: \"SS\",\n                     password: \"IDd52\",\n                     date: \"23052041\"\n              })\n       };\n       fetch('http://localhost:5000/test', requestOptions)\n              .then(response => response.json())\n              .then(message => setPostId(message));\n       // empty dependency array means this effect will only run once (like componentDidMount in classes)\n}, []);\n\n  return (\n              <div className=\"card text-center m-3\">\n                     <h5 className=\"card-header\">Simple POST Request</h5>\n                     <div className=\"card-body\">\n                            {JSON.stringify(PostId)}\n                     </div>\n              </div>\n       )\n*/\n\n/*import React, { Component } from 'react';\n\nclass Chat extends Component {\n       state = {\n              data: null\n       };\n\n       componentDidMount() {\n              // Call our fetch function below once the component mounts\n              this.callBackendAPI()\n                     .then(res => this.setState({ data: res.express }))\n                     .catch(err => console.log(err));\n       }SyntaxErrorss_backend');\n              const body = await response.json();\n\n              if (response.status !== 200) {\n                     throw Error(body.message)\n              }\n              return body;\n       };\n\n       render() {\n              return (\n                     <div className=\"App\">\n                            <header className=\"App-header\">\n                                   <h1 className=\"App-title\">Welcome to React</h1>\n                            </header>\n                            <p className=\"App-intro\">{this.state.data}</p>\n                     </div>\n              );\n       }\n}\n\nexport default Chat;\n\n\n\n\n\n\n\n\n\n/* HOW TO FETCH DATA FROM EXTERNAL API EXAMPLE*/\n\n/*import React, { useState, useEffect } from 'react';\nimport { decode } from 'he';\n\n\nfunction Chat() {\n       const [joke, setJoke] = useState('');\n\n       const fetchJoke = async signal => {\n              const url = new URL('https://api.icndb.com/jokes/random');\n              const response = await fetch(url, { signal });\n              const { value } = await response.json();\n\n              setJoke(decode(value.joke));\n       };\n\n       useEffect(() => {\n              if (!joke) {\n                     const controller = new AbortController();\n                     fetchJoke(controller.signal);\n\n                     return () => controller.abort();\n              }\n       }, [joke]);\n\n       return (\n              <div className=\"App\">\n                     <header className=\"App-header\">\n                            <p>{joke || '...'}</p>\n                            <button className=\"App-link\" onClick={() => setJoke('')}>\n                                   Get a new joke\n        </button>\n                     </header>\n\n              </div>\n\n       );\n\n}\n*/\n//export default Chat","map":{"version":3,"sources":["/home/selma/Bureau/DEV/React-Sample/my-app/client/src/components/chatroom.js"],"names":["React","useState","Jitsi","NewWindow","roomName","userFullName","test","window","my_special_setting","console","log","Chat"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AAEA,MAAMC,QAAQ,GAAG,8DAAjB;AACA,MAAMC,YAAY,GAAG,mBAArB;AACA,MAAMC,IAAI,GAAGC,MAAM,CAACC,kBAApB;AACAC,OAAO,CAACC,GAAR,CAAYJ,IAAZ;;AAGA,MAAMK,IAAI,GAAG,MAAM;AACZF,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,sBACO,uDACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADP,eAEO,oBAAC,KAAD;AAAO,IAAA,QAAQ,EAAEA,IAAjB;AAAuB,IAAA,WAAW,EAAED,YAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFP,CADP;AAMN,CARD;;AASA,eAAeM,IAAf;AAGA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;AAEA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA","sourcesContent":["import React, { useState } from 'react'\nimport Jitsi from 'react-jitsi'\nimport NewWindow from 'react-new-window'\n\nconst roomName = 'my-super-secret-meeting-123e4567-e89b-12d3-a456-426655440000'\nconst userFullName = 'Joseph Strawberry'\nconst test = window.my_special_setting;\nconsole.log(test)\n\n\nconst Chat = () => {\n       console.log(test)\n       return (\n              <>\n                     <h2>My First Meeting!</h2>\n                     <Jitsi roomName={test} displayName={userFullName} />\n              </>\n       )\n}\nexport default Chat;\n\n\n/* global gapi */\n/*\nfunction Chat() {\n\n\n\n       function checklogin() {\n              //   fetch('http://localhost:5000/testlog')\n              window.test();\n       }\n       return (\n              <div className=\"card text-center m-3\">\n                     <h5 className=\"card-header\">\n                            Simple POST Request</h5>\n                     <div className=\"card-body\">\n                            HOLA\n                            <button onClick={checklogin}> Create Room\n                                   </button>\n                     </div>\n              </div>\n       )\n\n}\nexport default Chat;\n\n\n\n\n*/\n\n\n\n\n\n\n\n\n//HOW TO SET A POST REQUEST TO AN EXTERNAL API\n\n// STORE USER IN DATABASE\n\n/*const [PostId, setPostId] = useState(null);\n\nuseEffect(() => {\n\n       // POST request using fetch inside useEffect React hook\n       const requestOptions = {\n              method: 'POST',\n              headers: { 'Content-Type': 'application/json' },\n              body: JSON.stringify({\n                     id: \"4\",\n                     name: \"t\",\n                     email: \"SS\",\n                     password: \"IDd52\",\n                     date: \"23052041\"\n              })\n       };\n       fetch('http://localhost:5000/test', requestOptions)\n              .then(response => response.json())\n              .then(message => setPostId(message));\n       // empty dependency array means this effect will only run once (like componentDidMount in classes)\n}, []);\n\n  return (\n              <div className=\"card text-center m-3\">\n                     <h5 className=\"card-header\">Simple POST Request</h5>\n                     <div className=\"card-body\">\n                            {JSON.stringify(PostId)}\n                     </div>\n              </div>\n       )\n*/\n\n\n\n\n\n\n\n/*import React, { Component } from 'react';\n\nclass Chat extends Component {\n       state = {\n              data: null\n       };\n\n       componentDidMount() {\n              // Call our fetch function below once the component mounts\n              this.callBackendAPI()\n                     .then(res => this.setState({ data: res.express }))\n                     .catch(err => console.log(err));\n       }SyntaxErrorss_backend');\n              const body = await response.json();\n\n              if (response.status !== 200) {\n                     throw Error(body.message)\n              }\n              return body;\n       };\n\n       render() {\n              return (\n                     <div className=\"App\">\n                            <header className=\"App-header\">\n                                   <h1 className=\"App-title\">Welcome to React</h1>\n                            </header>\n                            <p className=\"App-intro\">{this.state.data}</p>\n                     </div>\n              );\n       }\n}\n\nexport default Chat;\n\n\n\n\n\n\n\n\n\n/* HOW TO FETCH DATA FROM EXTERNAL API EXAMPLE*/\n\n/*import React, { useState, useEffect } from 'react';\nimport { decode } from 'he';\n\n\nfunction Chat() {\n       const [joke, setJoke] = useState('');\n\n       const fetchJoke = async signal => {\n              const url = new URL('https://api.icndb.com/jokes/random');\n              const response = await fetch(url, { signal });\n              const { value } = await response.json();\n\n              setJoke(decode(value.joke));\n       };\n\n       useEffect(() => {\n              if (!joke) {\n                     const controller = new AbortController();\n                     fetchJoke(controller.signal);\n\n                     return () => controller.abort();\n              }\n       }, [joke]);\n\n       return (\n              <div className=\"App\">\n                     <header className=\"App-header\">\n                            <p>{joke || '...'}</p>\n                            <button className=\"App-link\" onClick={() => setJoke('')}>\n                                   Get a new joke\n        </button>\n                     </header>\n\n              </div>\n\n       );\n\n}\n*/\n//export default Chat\n"]},"metadata":{},"sourceType":"module"}