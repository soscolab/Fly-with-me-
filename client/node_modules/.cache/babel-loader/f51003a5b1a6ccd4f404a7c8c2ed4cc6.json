{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { exactProp } from '@material-ui/utils';\nimport { setRef, useForkRef } from '../utils/reactHelpers';\n\nfunction getContainer(container) {\n  container = typeof container === 'function' ? container() : container; // #StrictMode ready\n\n  return ReactDOM.findDOMNode(container);\n}\n\nvar useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\n/**\n * Portals provide a first-class way to render children into a DOM node\n * that exists outside the DOM hierarchy of the parent component.\n */\n\nvar Portal = React.forwardRef(function Portal(props, ref) {\n  var children = props.children,\n      container = props.container,\n      _props$disablePortal = props.disablePortal,\n      disablePortal = _props$disablePortal === void 0 ? false : _props$disablePortal,\n      onRendered = props.onRendered;\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      mountNode = _React$useState2[0],\n      setMountNode = _React$useState2[1];\n\n  var handleRef = useForkRef(children.ref, ref);\n  useEnhancedEffect(function () {\n    if (!disablePortal) {\n      setMountNode(getContainer(container) || document.body);\n    }\n  }, [container, disablePortal]);\n  useEnhancedEffect(function () {\n    if (mountNode && !disablePortal) {\n      setRef(ref, mountNode);\n      return function () {\n        setRef(ref, null);\n      };\n    }\n\n    return undefined;\n  }, [ref, mountNode, disablePortal]);\n  useEnhancedEffect(function () {\n    if (onRendered && (mountNode || disablePortal)) {\n      onRendered();\n    }\n  }, [onRendered, mountNode, disablePortal]);\n\n  if (disablePortal) {\n    React.Children.only(children);\n    return React.cloneElement(children, {\n      ref: handleRef\n    });\n  }\n\n  return mountNode ? ReactDOM.createPortal(children, mountNode) : mountNode;\n});\nprocess.env.NODE_ENV !== \"production\" ? Portal.propTypes = {\n  /**\n   * The children to render into the `container`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * A node, component instance, or function that returns either.\n   * The `container` will have the portal children appended to it.\n   * By default, it uses the body of the top-level document object,\n   * so it's simply `document.body` most of the time.\n   */\n  container: PropTypes.oneOfType([PropTypes.func, PropTypes.instanceOf(React.Component), PropTypes.instanceOf(typeof Element === 'undefined' ? Object : Element)]),\n\n  /**\n   * Disable the portal behavior.\n   * The children stay within it's parent DOM hierarchy.\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * Callback fired once the children has been mounted into the `container`.\n   *\n   * This prop will be deprecated and removed in v5, the ref can be used instead.\n   */\n  onRendered: PropTypes.func\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  Portal['propTypes' + ''] = exactProp(Portal.propTypes);\n}\n\nexport default Portal;","map":{"version":3,"sources":["/home/selma/Bureau/DEV/React-Sample/my-app/node_modules/@material-ui/core/esm/Portal/Portal.js"],"names":["_slicedToArray","React","ReactDOM","PropTypes","exactProp","setRef","useForkRef","getContainer","container","findDOMNode","useEnhancedEffect","window","useLayoutEffect","useEffect","Portal","forwardRef","props","ref","children","_props$disablePortal","disablePortal","onRendered","_React$useState","useState","_React$useState2","mountNode","setMountNode","handleRef","document","body","undefined","Children","only","cloneElement","createPortal","process","env","NODE_ENV","propTypes","node","oneOfType","func","instanceOf","Component","Element","Object","bool"],"mappings":"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","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { exactProp } from '@material-ui/utils';\nimport { setRef, useForkRef } from '../utils/reactHelpers';\n\nfunction getContainer(container) {\n  container = typeof container === 'function' ? container() : container; // #StrictMode ready\n\n  return ReactDOM.findDOMNode(container);\n}\n\nvar useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\n/**\n * Portals provide a first-class way to render children into a DOM node\n * that exists outside the DOM hierarchy of the parent component.\n */\n\nvar Portal = React.forwardRef(function Portal(props, ref) {\n  var children = props.children,\n      container = props.container,\n      _props$disablePortal = props.disablePortal,\n      disablePortal = _props$disablePortal === void 0 ? false : _props$disablePortal,\n      onRendered = props.onRendered;\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      mountNode = _React$useState2[0],\n      setMountNode = _React$useState2[1];\n\n  var handleRef = useForkRef(children.ref, ref);\n  useEnhancedEffect(function () {\n    if (!disablePortal) {\n      setMountNode(getContainer(container) || document.body);\n    }\n  }, [container, disablePortal]);\n  useEnhancedEffect(function () {\n    if (mountNode && !disablePortal) {\n      setRef(ref, mountNode);\n      return function () {\n        setRef(ref, null);\n      };\n    }\n\n    return undefined;\n  }, [ref, mountNode, disablePortal]);\n  useEnhancedEffect(function () {\n    if (onRendered && (mountNode || disablePortal)) {\n      onRendered();\n    }\n  }, [onRendered, mountNode, disablePortal]);\n\n  if (disablePortal) {\n    React.Children.only(children);\n    return React.cloneElement(children, {\n      ref: handleRef\n    });\n  }\n\n  return mountNode ? ReactDOM.createPortal(children, mountNode) : mountNode;\n});\nprocess.env.NODE_ENV !== \"production\" ? Portal.propTypes = {\n  /**\n   * The children to render into the `container`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * A node, component instance, or function that returns either.\n   * The `container` will have the portal children appended to it.\n   * By default, it uses the body of the top-level document object,\n   * so it's simply `document.body` most of the time.\n   */\n  container: PropTypes.oneOfType([PropTypes.func, PropTypes.instanceOf(React.Component), PropTypes.instanceOf(typeof Element === 'undefined' ? Object : Element)]),\n\n  /**\n   * Disable the portal behavior.\n   * The children stay within it's parent DOM hierarchy.\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * Callback fired once the children has been mounted into the `container`.\n   *\n   * This prop will be deprecated and removed in v5, the ref can be used instead.\n   */\n  onRendered: PropTypes.func\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  Portal['propTypes' + ''] = exactProp(Portal.propTypes);\n}\n\nexport default Portal;"]},"metadata":{},"sourceType":"module"}