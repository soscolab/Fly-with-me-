{"ast":null,"code":"var _jsxFileName = \"/home/selma/Bureau/DEV/React-Sample/my-app/src/Components/popup.js\";\nimport React from \"react\";\nimport Corps from \"./Corps\";\nimport { useState, useContext } from 'react';\nimport { Context } from \"./context\";\nimport { useForm } from \"react-hook-form\";\n\nconst PopUp = ({\n  valeur\n}) => {\n  const {\n    Submit,\n    register,\n    errors\n  } = useForm();\n  const [userName, setUserName] = useState('');\n  const [rooms, setrooms] = useContext(Context);\n\n  const handlechange = e => {\n    setUserName(e.target.value);\n  };\n\n  Submit = e => {\n    e.preventDefault();\n    setrooms(prevrooms => [...prevrooms, {\n      name: userName,\n      foto: userName\n    }]);\n    valeur();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal_content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popupCloseButton\",\n    onClick: valeur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, \" \\xD7\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: Submit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"username\",\n    required: \"required\",\n    value: userName,\n    onChange: handlechange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, \"Submit\")), \"); };\"));\n};\n\nexport default PopUp;","map":{"version":3,"sources":["/home/selma/Bureau/DEV/React-Sample/my-app/src/Components/popup.js"],"names":["React","Corps","useState","useContext","Context","useForm","PopUp","valeur","Submit","register","errors","userName","setUserName","rooms","setrooms","handlechange","e","target","value","preventDefault","prevrooms","name","foto","onSubmit"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,OAAT,QAAwB,iBAAxB;;AAGA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAC1B,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,QAAV;AAAoBC,IAAAA;AAApB,MAA+BL,OAAO,EAA5C;AAEA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBX,UAAU,CAACC,OAAD,CAApC;;AAGA,QAAMW,YAAY,GAAIC,CAAD,IAAO;AACxBJ,IAAAA,WAAW,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACH,GAFD;;AAIAV,EAAAA,MAAM,GAAIQ,CAAD,IAAO;AACZA,IAAAA,CAAC,CAACG,cAAF;AACAL,IAAAA,QAAQ,CAACM,SAAS,IAAI,CAAC,GAAGA,SAAJ,EAAe;AAAEC,MAAAA,IAAI,EAAEV,QAAR;AAAkBW,MAAAA,IAAI,EAAEX;AAAxB,KAAf,CAAd,CAAR;AACAJ,IAAAA,MAAM;AAET,GALD;;AAOA,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAkC,IAAA,OAAO,EAAEA,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAII;AAAM,IAAA,QAAQ,EAAEC,MAAM,CAACe,QAAD,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,WAAW,EAAC,UADhB;AAEI,IAAA,QAAQ,EAAC,UAFb;AAGI,IAAA,KAAK,EAAEZ,QAHX;AAII,IAAA,QAAQ,EAAEI,YAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAQI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ,CAJJ,UADJ,CADJ;AAsBH,CAxCD;;AA0CA,eAAeT,KAAf","sourcesContent":["import React from \"react\";\nimport Corps from \"./Corps\";\nimport { useState, useContext } from 'react';\nimport { Context } from \"./context\";\nimport { useForm } from \"react-hook-form\";\n\n\nconst PopUp = ({ valeur }) => {\n    const { Submit, register, errors } = useForm();\n\n    const [userName, setUserName] = useState('');\n    const [rooms, setrooms] = useContext(Context);\n\n\n    const handlechange = (e) => {\n        setUserName(e.target.value);\n    }\n\n    Submit = (e) => {\n        e.preventDefault();\n        setrooms(prevrooms => [...prevrooms, { name: userName, foto: userName }]);\n        valeur()\n\n    }\n\n    return (\n        <div className=\"modal\">\n            <div className=\"modal_content\">\n                <div className=\"popupCloseButton\" onClick={valeur}> &times;</div>\n\n\n                <form onSubmit={Submit(onSubmit)}>\n                    <input\n                        placeholder=\"username\"\n                        required=\"required\"\n                        value={userName}\n                        onChange={handlechange}\n                    />\n\n                    <button type=\"submit\">Submit</button>\n                </form>\n  );\n};\n\n            </div>\n        </div>\n    )\n};\n\nexport default PopUp;"]},"metadata":{},"sourceType":"module"}