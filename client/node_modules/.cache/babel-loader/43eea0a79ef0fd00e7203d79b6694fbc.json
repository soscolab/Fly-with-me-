{"ast":null,"code":"var _jsxFileName = \"/home/selma/Bureau/DEV/React-Sample/my-app/src/components/Corps.js\";\nimport React from 'react';\nimport PopUp from './popup';\nimport { useState, useContext } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { Context } from \"./context\";\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\n\nconst Corps = () => {\n  const [rooms, setrooms] = useContext(Context); //context global declaré dans context\n\n  const [user, setUser] = useState([]); //By default, the rooms list is empty\n\n  const [visible, setvisible] = useState(false); //handle close for popup, ist past as a prop to popup\n\n  const handleclose = () => {\n    setvisible(false);\n  }; //SYNTAXE USE  event.target.name, event.target.value;\n  //Onlick callback function: add a new room to the array\n\n\n  const addroom = () => {\n    setvisible(true);\n  }; //Display the list of Live rooms\n\n\n  const roomslist = rooms.map(name => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rooms-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(CssBaseline, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Container, {\n      Fixed: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      component: \"div\",\n      style: {\n        backgroundColor: '#cfe8fc',\n        height: '50vh'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 36\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"room-information\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 36\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"room-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 43\n      }\n    }, \" \", name.name, \"  \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"room-photo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 43\n      }\n    }, \" \", name.foto, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"room-join-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 43\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      href: \"./chatroom\",\n      target: \"_blank\",\n      variant: \"outlined\",\n      color: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 50\n      }\n    }, \" Join \"))))));\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rooms-section-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 22\n    }\n  }, \" #Live now!\", /*#__PURE__*/React.createElement(\"div\", {\n    className: \"room-new-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 22\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: addroom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 36\n    }\n  }, \"   Create Room\"))), visible ? /*#__PURE__*/React.createElement(PopUp, {\n    valeur: handleclose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 33\n    }\n  }) : null, \" \", /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rooms-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 22\n    }\n  }, roomslist, \" \"));\n};\n\nexport default Corps;","map":{"version":3,"sources":["/home/selma/Bureau/DEV/React-Sample/my-app/src/components/Corps.js"],"names":["React","PopUp","useState","useContext","Link","Context","Button","CssBaseline","Typography","Container","Corps","rooms","setrooms","user","setUser","visible","setvisible","handleclose","addroom","roomslist","map","name","backgroundColor","height","foto"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PopUp from './popup'\nimport { useState, useContext } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { Context } from \"./context\";\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\n\n\nconst Corps = () => {\n       const [rooms, setrooms] = useContext(Context);  //context global declaré dans context\n       const [user, setUser] = useState([]);\n       //By default, the rooms list is empty\n       const [visible, setvisible] = useState(false);\n       //handle close for popup, ist past as a prop to popup\n\n       const handleclose = () => {\n              setvisible(false)\n       }\n\n       //SYNTAXE USE  event.target.name, event.target.value;\n       //Onlick callback function: add a new room to the array\n       const addroom = () => {\n              setvisible(true)\n       };\n\n       //Display the list of Live rooms\n       const roomslist = rooms.map(name => {\n              return (<div className=\"rooms-container\">\n\n                     <React.Fragment>\n                            <CssBaseline />\n                            <Container Fixed>\n                                   <Typography component=\"div\" style={{ backgroundColor: '#cfe8fc', height: '50vh' }} />\n\n                                   <div className=\"room-information\">\n                                          <div className=\"room-name\"> {name.name}  </div>\n                                          <div className=\"room-photo\"> {name.foto} </div>\n                                          <div className=\"room-join-container\">\n                                                 <Button href=\"./chatroom\" target=\"_blank\" variant=\"outlined\" color=\"secondary\"> Join </Button>\n                                          </div>\n                                   </div>\n\n\n\n\n\n\n\n                            </Container>\n                     </React.Fragment>\n\n\n              </div>\n              )\n       })\n\n       return (\n              <div>\n                     <div className=\"rooms-section-title\"> #Live now!\n                     <div className=\"room-new-button\">\n                                   {/* onclick state changes(new room added), which means that the rooms will be rendered once again */}\n                                   <Button variant=\"contained\" color=\"secondary\" onClick={addroom}>   Create Room\n                                   </Button>\n                            </div>\n                     </div>\n                     {visible ? <PopUp valeur={handleclose} /> : null} {/* if visible render the popup if not don't render anything */}\n                     <div className=\"rooms-container\">\n                            {roomslist} {/* Map through the rooms list && display them */}\n                     </div>\n              </div>\n       )\n};\n\nexport default Corps;\n"]},"metadata":{},"sourceType":"module"}