{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      backgroundColor: theme.palette.action.hover,\n      height: '1.2em'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"`. */\n    text: {\n      marginTop: '0.8em',\n      marginBottom: '0.8em',\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"rect\"`. */\n    rect: {},\n\n    /* Styles applied to the root element if `variant=\"circle\"`. */\n    circle: {\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the root element if `disabledAnimate={false}`. */\n    animate: {\n      animation: '$mui-skeleton 1.5s ease-in-out infinite'\n    },\n    '@keyframes mui-skeleton': {\n      '0%': {\n        opacity: 1\n      },\n      '50%': {\n        opacity: 0.4\n      },\n      '100%': {\n        opacity: 1\n      }\n    }\n  };\n};\nvar Skeleton = React.forwardRef(function Skeleton(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableAnimate = props.disableAnimate,\n      disableAnimate = _props$disableAnimate === void 0 ? false : _props$disableAnimate,\n      height = props.height,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'text' : _props$variant,\n      width = props.width,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableAnimate\", \"height\", \"variant\", \"width\"]);\n\n  return React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, classes[variant], className, !disableAnimate && classes.animate)\n  }, other, {\n    style: _extends({\n      width: width,\n      height: height\n    }, other.style)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Skeleton.propTypes = {\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true` the animation effect is disabled.\n   */\n  disableAnimate: PropTypes.bool,\n\n  /**\n   * Height of the skeleton.\n   * Useful when you don't want to adapt the skeleton to a text element but for instance a card.\n   */\n  height: PropTypes.any,\n\n  /**\n   * The type of content that will be rendered.\n   */\n  variant: PropTypes.oneOf(['text', 'rect', 'circle']),\n\n  /**\n   * Width of the skeleton.\n   * Useful when the skeleton is inside an inline element with no width of its own.\n   */\n  width: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSkeleton'\n})(Skeleton);","map":{"version":3,"sources":["/home/selma/Bureau/DEV/React-Sample/my-app/client/node_modules/@material-ui/lab/esm/Skeleton/Skeleton.js"],"names":["_extends","_objectWithoutProperties","React","clsx","PropTypes","withStyles","styles","theme","root","backgroundColor","palette","action","hover","height","text","marginTop","marginBottom","borderRadius","shape","rect","circle","animate","animation","opacity","Skeleton","forwardRef","props","ref","classes","className","_props$component","component","Component","_props$disableAnimate","disableAnimate","_props$variant","variant","width","other","createElement","style","process","env","NODE_ENV","propTypes","object","isRequired","string","elementType","bool","any","oneOf","name"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      backgroundColor: theme.palette.action.hover,\n      height: '1.2em'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"`. */\n    text: {\n      marginTop: '0.8em',\n      marginBottom: '0.8em',\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"rect\"`. */\n    rect: {},\n\n    /* Styles applied to the root element if `variant=\"circle\"`. */\n    circle: {\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the root element if `disabledAnimate={false}`. */\n    animate: {\n      animation: '$mui-skeleton 1.5s ease-in-out infinite'\n    },\n    '@keyframes mui-skeleton': {\n      '0%': {\n        opacity: 1\n      },\n      '50%': {\n        opacity: 0.4\n      },\n      '100%': {\n        opacity: 1\n      }\n    }\n  };\n};\nvar Skeleton = React.forwardRef(function Skeleton(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableAnimate = props.disableAnimate,\n      disableAnimate = _props$disableAnimate === void 0 ? false : _props$disableAnimate,\n      height = props.height,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'text' : _props$variant,\n      width = props.width,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableAnimate\", \"height\", \"variant\", \"width\"]);\n\n  return React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, classes[variant], className, !disableAnimate && classes.animate)\n  }, other, {\n    style: _extends({\n      width: width,\n      height: height\n    }, other.style)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Skeleton.propTypes = {\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true` the animation effect is disabled.\n   */\n  disableAnimate: PropTypes.bool,\n\n  /**\n   * Height of the skeleton.\n   * Useful when you don't want to adapt the skeleton to a text element but for instance a card.\n   */\n  height: PropTypes.any,\n\n  /**\n   * The type of content that will be rendered.\n   */\n  variant: PropTypes.oneOf(['text', 'rect', 'circle']),\n\n  /**\n   * Width of the skeleton.\n   * Useful when the skeleton is inside an inline element with no width of its own.\n   */\n  width: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSkeleton'\n})(Skeleton);"]},"metadata":{},"sourceType":"module"}