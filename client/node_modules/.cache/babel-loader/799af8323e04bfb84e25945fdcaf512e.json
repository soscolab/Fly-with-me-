{"ast":null,"code":"var _jsxFileName = \"/home/selma/Bureau/DEV/React-Sample/my-app/src/Components/Corps.js\";\nimport React, { useEffect } from 'react';\nimport PopUp from './popup';\nimport { useState } from 'react';\nimport { Link } from \"react-router-dom\";\n\nconst Corps = () => {\n  const [user, setUser] = useState(null); //By default, the rooms list is empty\n\n  const [rooms, setrooms] = useState([]); //Popup state\n\n  const [visible, setvisible] = useState(false); //handle close for popup, ist past as a prop to popup\n\n  const handleclose = () => {\n    setvisible(false);\n  }; //SYNTAXE USE  event.target.name, event.target.value;\n  //Onlick callback function: add a new room to the array\n\n\n  const addroom = () => {\n    setvisible(true);\n    setrooms([...rooms, {\n      id: 1,\n      name: 'selmadahmani',\n      foto: 'this is my photo'\n    }]);\n  }; //Display the list of Live rooms\n\n\n  const roomslist = rooms.map(name => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"room-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"room-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 29\n      }\n    }, \" \", name.name, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"room-photo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 29\n      }\n    }, \" \", name.foto, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"room-join-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 29\n      }\n    }, \" \", /*#__PURE__*/React.createElement(Link, {\n      className: \"room-join-button\",\n      to: \"./chatroom\",\n      target: \"_blank\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 65\n      }\n    }, \" Join  \"), \" \"));\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rooms-section-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 22\n    }\n  }, \" #Live now!\", /*#__PURE__*/React.createElement(\"div\", {\n    className: \"room-new-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 22\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addroom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 36\n    }\n  }, \"  Create Room  \"))), visible ? /*#__PURE__*/React.createElement(PopUp, {\n    valeur: handleclose,\n    submit: handlesubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 33\n    }\n  }) : null, \" \", /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rooms-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 22\n    }\n  }, roomslist, \" \"));\n};\n\nexport default Corps;","map":{"version":3,"sources":["/home/selma/Bureau/DEV/React-Sample/my-app/src/Components/Corps.js"],"names":["React","useEffect","PopUp","useState","Link","Corps","user","setUser","rooms","setrooms","visible","setvisible","handleclose","addroom","id","name","foto","roomslist","map","handlesubmit"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAEb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,IAAD,CAAhC,CAFa,CAIb;;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC,CALa,CAOb;;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC,CARa,CAUb;;AACA,QAAMS,WAAW,GAAG,MAAM;AACnBD,IAAAA,UAAU,CAAC,KAAD,CAAV;AACN,GAFD,CAXa,CAgBb;AACA;;;AACA,QAAME,OAAO,GAAG,MAAM;AACfF,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAF,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EACT;AACOM,MAAAA,EAAE,EAAE,CADX;AAEOC,MAAAA,IAAI,EAAE,cAFb;AAGOC,MAAAA,IAAI,EAAE;AAHb,KADS,CAAD,CAAR;AAON,GATD,CAlBa,CA6Bb;;;AACA,QAAMC,SAAS,GAAGT,KAAK,CAACU,GAAN,CAAUH,IAAI,IAAI;AAC7B,wBACO;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACO;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA6BA,IAAI,CAACA,IAAlC,MADP,eAEO;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA8BA,IAAI,CAACC,IAAnC,MAFP,eAGO;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAoC,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,kBAAhB;AAAmC,MAAA,EAAE,EAAC,YAAtC;AAAmD,MAAA,MAAM,EAAC,QAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAApC,MAHP,CADP;AAON,GARiB,CAAlB;AAUA,sBACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACO;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCACA;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEc;AAAQ,IAAA,OAAO,EAAEH,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFd,CADA,CADP,EAOQH,OAAO,gBAAG,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEE,WAAf;AAA4B,IAAA,MAAM,EAAEO,YAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAA0D,IAPzE,oBASO;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQF,SADR,MATP,CADP;AAiBN,CAzDD;;AA2DA,eAAeZ,KAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport PopUp from './popup'\nimport { useState } from 'react';\nimport { Link } from \"react-router-dom\";\n\nconst Corps = () => {\n\n       const [user, setUser] = useState(null);\n\n       //By default, the rooms list is empty\n       const [rooms, setrooms] = useState([]);\n\n       //Popup state\n       const [visible, setvisible] = useState(false);\n\n       //handle close for popup, ist past as a prop to popup\n       const handleclose = () => {\n              setvisible(false)\n       }\n\n\n       //SYNTAXE USE  event.target.name, event.target.value;\n       //Onlick callback function: add a new room to the array\n       const addroom = () => {\n              setvisible(true)\n              setrooms([...rooms,\n              {\n                     id: 1,\n                     name: 'selmadahmani',\n                     foto: 'this is my photo'\n              }\n              ]);\n       };\n\n       //Display the list of Live rooms\n       const roomslist = rooms.map(name => {\n              return (\n                     <div className=\"room-info\">\n                            <div className=\"room-name\"> {name.name} </div>\n                            <div className=\"room-photo\"> {name.foto} </div>\n                            <div className=\"room-join-button\" > <Link className=\"room-join-button\" to=\"./chatroom\" target=\"_blank\"> Join  </Link> </div>\n                     </div>\n              )\n       })\n\n       return (\n              <div>\n                     <div className=\"rooms-section-title\"> #Live now!\n                     <div className=\"room-new-button\">\n                                   {/* onclick state changes(new room added), which means that the rooms will be rendered once again */}\n                                   <button onClick={addroom}>  Create Room  </button>\n                            </div>\n                     </div>\n                     {visible ? <PopUp valeur={handleclose} submit={handlesubmit} /> : null} {/* if visible render the popup if not don't render anything */}\n\n                     <div className=\"rooms-container\">\n                            {roomslist} {/* Map through the rooms list && display them */}\n                     </div>\n              </div>\n\n\n       )\n};\n\nexport default Corps;\n"]},"metadata":{},"sourceType":"module"}